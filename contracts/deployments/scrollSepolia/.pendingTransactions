{
  "0x4519d1ca0155be043d53be4fbd79165f00e748db29685cedd958b8cd22e2af7a": {
    "name": "USDT",
    "deployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "USDT",
      "sourceName": "contracts/example-use-cases/USDT.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "name": "ERC20InsufficientAllowance",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "name": "ERC20InsufficientBalance",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "name": "ERC20InvalidApprover",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "name": "ERC20InvalidReceiver",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "ERC20InvalidSender",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "ERC20InvalidSpender",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "OwnableInvalidOwner",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "OwnableUnauthorizedAccount",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mint",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b5060405161179438038061179483398181016040528101906100329190610272565b806040518060400160405280600481526020017f55534454000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f555344540000000000000000000000000000000000000000000000000000000081525081600390816100ae91906104ef565b5080600490816100be91906104ef565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101335760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012a91906105d0565b60405180910390fd5b6101428161014960201b60201c565b50506105eb565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061023f82610214565b9050919050565b61024f81610234565b811461025a57600080fd5b50565b60008151905061026c81610246565b92915050565b6000602082840312156102885761028761020f565b5b60006102968482850161025d565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061032057607f821691505b602082108103610333576103326102d9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261039b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261035e565b6103a5868361035e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006103ec6103e76103e2846103bd565b6103c7565b6103bd565b9050919050565b6000819050919050565b610406836103d1565b61041a610412826103f3565b84845461036b565b825550505050565b600090565b61042f610422565b61043a8184846103fd565b505050565b5b8181101561045e57610453600082610427565b600181019050610440565b5050565b601f8211156104a35761047481610339565b61047d8461034e565b8101602085101561048c578190505b6104a06104988561034e565b83018261043f565b50505b505050565b600082821c905092915050565b60006104c6600019846008026104a8565b1980831691505092915050565b60006104df83836104b5565b9150826002028217905092915050565b6104f88261029f565b67ffffffffffffffff811115610511576105106102aa565b5b61051b8254610308565b610526828285610462565b600060209050601f8311600181146105595760008415610547578287015190505b61055185826104d3565b8655506105b9565b601f19841661056786610339565b60005b8281101561058f5784890151825560018201915060208501945060208101905061056a565b868310156105ac57848901516105a8601f8916826104b5565b8355505b6001600288020188555050505b505050505050565b6105ca81610234565b82525050565b60006020820190506105e560008301846105c1565b92915050565b61119a806105fa6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610dee565b60405180910390f35b61010c60048036038101906101079190610ea9565b61032e565b6040516101199190610f04565b60405180910390f35b61012a610351565b6040516101379190610f2e565b60405180910390f35b61015a60048036038101906101559190610f49565b61035b565b6040516101679190610f04565b60405180910390f35b61017861038a565b6040516101859190610fb8565b60405180910390f35b6101a860048036038101906101a39190610ea9565b610393565b005b6101c460048036038101906101bf9190610fd3565b6103a9565b6040516101d19190610f2e565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f9919061100f565b60405180910390f35b61020a61042f565b6040516102179190610dee565b60405180910390f35b61023a60048036038101906102359190610ea9565b6104c1565b6040516102479190610f04565b60405180910390f35b61026a6004803603810190610265919061102a565b6104e4565b6040516102779190610f2e565b60405180910390f35b61029a60048036038101906102959190610fd3565b61056b565b005b6060600380546102ab90611099565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790611099565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e85858561069f565b60019150509392505050565b60006012905090565b61039b610793565b6103a5828261081a565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610793565b610403600061089c565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e90611099565b80601f016020809104026020016040519081016040528092919081815260200182805461046a90611099565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d981858561069f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610793565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc919061100f565b60405180910390fd5b6105ee8161089c565b50565b600033905090565b6106068383836001610962565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106995781811015610689578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610680939291906110ca565b60405180910390fd5b61069884848484036000610962565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107115760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610708919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107835760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077a919061100f565b60405180910390fd5b61078e838383610b39565b505050565b61079b6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107b9610405565b73ffffffffffffffffffffffffffffffffffffffff1614610818576107dc6105f1565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161080f919061100f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610883919061100f565b60405180910390fd5b61089860008383610b39565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d45760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cb919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a465760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3d919061100f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b33578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2a9190610f2e565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8b578060026000828254610b7f9190611130565b92505081905550610c5e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0e939291906110ca565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca75780600260008282540392505081905550610cf4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d519190610f2e565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d98578082015181840152602081019050610d7d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc082610d5e565b610dca8185610d69565b9350610dda818560208601610d7a565b610de381610da4565b840191505092915050565b60006020820190508181036000830152610e088184610db5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4082610e15565b9050919050565b610e5081610e35565b8114610e5b57600080fd5b50565b600081359050610e6d81610e47565b92915050565b6000819050919050565b610e8681610e73565b8114610e9157600080fd5b50565b600081359050610ea381610e7d565b92915050565b60008060408385031215610ec057610ebf610e10565b5b6000610ece85828601610e5e565b9250506020610edf85828601610e94565b9150509250929050565b60008115159050919050565b610efe81610ee9565b82525050565b6000602082019050610f196000830184610ef5565b92915050565b610f2881610e73565b82525050565b6000602082019050610f436000830184610f1f565b92915050565b600080600060608486031215610f6257610f61610e10565b5b6000610f7086828701610e5e565b9350506020610f8186828701610e5e565b9250506040610f9286828701610e94565b9150509250925092565b600060ff82169050919050565b610fb281610f9c565b82525050565b6000602082019050610fcd6000830184610fa9565b92915050565b600060208284031215610fe957610fe8610e10565b5b6000610ff784828501610e5e565b91505092915050565b61100981610e35565b82525050565b60006020820190506110246000830184611000565b92915050565b6000806040838503121561104157611040610e10565b5b600061104f85828601610e5e565b925050602061106085828601610e5e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b157607f821691505b6020821081036110c4576110c361106a565b5b50919050565b60006060820190506110df6000830186611000565b6110ec6020830185610f1f565b6110f96040830184610f1f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113b82610e73565b915061114683610e73565b925082820190508082111561115e5761115d611101565b5b9291505056fea2646970667358221220404018bc6ad07b93e6c7d5202a4df04bbdf224aa0770c9cdae9758c1d874bb5364736f6c634300081a0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610dee565b60405180910390f35b61010c60048036038101906101079190610ea9565b61032e565b6040516101199190610f04565b60405180910390f35b61012a610351565b6040516101379190610f2e565b60405180910390f35b61015a60048036038101906101559190610f49565b61035b565b6040516101679190610f04565b60405180910390f35b61017861038a565b6040516101859190610fb8565b60405180910390f35b6101a860048036038101906101a39190610ea9565b610393565b005b6101c460048036038101906101bf9190610fd3565b6103a9565b6040516101d19190610f2e565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f9919061100f565b60405180910390f35b61020a61042f565b6040516102179190610dee565b60405180910390f35b61023a60048036038101906102359190610ea9565b6104c1565b6040516102479190610f04565b60405180910390f35b61026a6004803603810190610265919061102a565b6104e4565b6040516102779190610f2e565b60405180910390f35b61029a60048036038101906102959190610fd3565b61056b565b005b6060600380546102ab90611099565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790611099565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e85858561069f565b60019150509392505050565b60006012905090565b61039b610793565b6103a5828261081a565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610793565b610403600061089c565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e90611099565b80601f016020809104026020016040519081016040528092919081815260200182805461046a90611099565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d981858561069f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610793565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc919061100f565b60405180910390fd5b6105ee8161089c565b50565b600033905090565b6106068383836001610962565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106995781811015610689578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610680939291906110ca565b60405180910390fd5b61069884848484036000610962565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107115760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610708919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107835760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077a919061100f565b60405180910390fd5b61078e838383610b39565b505050565b61079b6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107b9610405565b73ffffffffffffffffffffffffffffffffffffffff1614610818576107dc6105f1565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161080f919061100f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610883919061100f565b60405180910390fd5b61089860008383610b39565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d45760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cb919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a465760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3d919061100f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b33578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2a9190610f2e565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8b578060026000828254610b7f9190611130565b92505081905550610c5e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0e939291906110ca565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca75780600260008282540392505081905550610cf4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d519190610f2e565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d98578082015181840152602081019050610d7d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc082610d5e565b610dca8185610d69565b9350610dda818560208601610d7a565b610de381610da4565b840191505092915050565b60006020820190508181036000830152610e088184610db5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4082610e15565b9050919050565b610e5081610e35565b8114610e5b57600080fd5b50565b600081359050610e6d81610e47565b92915050565b6000819050919050565b610e8681610e73565b8114610e9157600080fd5b50565b600081359050610ea381610e7d565b92915050565b60008060408385031215610ec057610ebf610e10565b5b6000610ece85828601610e5e565b9250506020610edf85828601610e94565b9150509250929050565b60008115159050919050565b610efe81610ee9565b82525050565b6000602082019050610f196000830184610ef5565b92915050565b610f2881610e73565b82525050565b6000602082019050610f436000830184610f1f565b92915050565b600080600060608486031215610f6257610f61610e10565b5b6000610f7086828701610e5e565b9350506020610f8186828701610e5e565b9250506040610f9286828701610e94565b9150509250925092565b600060ff82169050919050565b610fb281610f9c565b82525050565b6000602082019050610fcd6000830184610fa9565b92915050565b600060208284031215610fe957610fe8610e10565b5b6000610ff784828501610e5e565b91505092915050565b61100981610e35565b82525050565b60006020820190506110246000830184611000565b92915050565b6000806040838503121561104157611040610e10565b5b600061104f85828601610e5e565b925050602061106085828601610e5e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b157607f821691505b6020821081036110c4576110c361106a565b5b50919050565b60006060820190506110df6000830186611000565b6110ec6020830185610f1f565b6110f96040830184610f1f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113b82610e73565b915061114683610e73565b925082820190508082111561115e5761115d611101565b5b9291505056fea2646970667358221220404018bc6ad07b93e6c7d5202a4df04bbdf224aa0770c9cdae9758c1d874bb5364736f6c634300081a0033",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "errors": {
          "ERC20InsufficientAllowance(address,uint256,uint256)": [
            {
              "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
              "params": {
                "allowance": "Amount of tokens a `spender` is allowed to operate with.",
                "needed": "Minimum amount required to perform a transfer.",
                "spender": "Address that may be allowed to operate on tokens without being their owner."
              }
            }
          ],
          "ERC20InsufficientBalance(address,uint256,uint256)": [
            {
              "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
              "params": {
                "balance": "Current balance for the interacting account.",
                "needed": "Minimum amount required to perform a transfer.",
                "sender": "Address whose tokens are being transferred."
              }
            }
          ],
          "ERC20InvalidApprover(address)": [
            {
              "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
              "params": {
                "approver": "Address initiating an approval operation."
              }
            }
          ],
          "ERC20InvalidReceiver(address)": [
            {
              "details": "Indicates a failure with the token `receiver`. Used in transfers.",
              "params": {
                "receiver": "Address to which tokens are being transferred."
              }
            }
          ],
          "ERC20InvalidSender(address)": [
            {
              "details": "Indicates a failure with the token `sender`. Used in transfers.",
              "params": {
                "sender": "Address whose tokens are being transferred."
              }
            }
          ],
          "ERC20InvalidSpender(address)": [
            {
              "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
              "params": {
                "spender": "Address that may be allowed to operate on tokens without being their owner."
              }
            }
          ],
          "OwnableInvalidOwner(address)": [
            {
              "details": "The owner is not a valid owner account. (eg. `address(0)`)"
            }
          ],
          "OwnableUnauthorizedAccount(address)": [
            {
              "details": "The caller account is not authorized to perform an operation."
            }
          ]
        },
        "events": {
          "Approval(address,address,uint256)": {
            "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
          },
          "Transfer(address,address,uint256)": {
            "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
          }
        },
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "evm": {
        "bytecode": {
          "functionDebugData": {
            "@_1608": {
              "entryPoint": null,
              "id": 1608,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_336": {
              "entryPoint": null,
              "id": 336,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_50": {
              "entryPoint": null,
              "id": 50,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_transferOwnership_146": {
              "entryPoint": 329,
              "id": 146,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "abi_decode_t_address_fromMemory": {
              "entryPoint": 605,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_address_fromMemory": {
              "entryPoint": 626,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_address_to_t_address_fromStack": {
              "entryPoint": 1473,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
              "entryPoint": 1488,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "allocate_unbounded": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "array_dataslot_t_string_storage": {
              "entryPoint": 825,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_length_t_string_memory_ptr": {
              "entryPoint": 671,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "clean_up_bytearray_end_slots_t_string_storage": {
              "entryPoint": 1122,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "cleanup_t_address": {
              "entryPoint": 564,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint160": {
              "entryPoint": 532,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint256": {
              "entryPoint": 957,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "clear_storage_range_t_bytes1": {
              "entryPoint": 1087,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "convert_t_uint256_to_t_uint256": {
              "entryPoint": 977,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
              "entryPoint": 1263,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "divide_by_32_ceil": {
              "entryPoint": 846,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "extract_byte_array_length": {
              "entryPoint": 776,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "extract_used_part_and_set_length_of_short_byte_array": {
              "entryPoint": 1235,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "identity": {
              "entryPoint": 967,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "mask_bytes_dynamic": {
              "entryPoint": 1205,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "panic_error_0x22": {
              "entryPoint": 729,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x41": {
              "entryPoint": 682,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "prepare_store_t_uint256": {
              "entryPoint": 1011,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
              "entryPoint": 527,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "shift_left_dynamic": {
              "entryPoint": 862,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "shift_right_unsigned_dynamic": {
              "entryPoint": 1192,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "storage_set_to_zero_t_uint256": {
              "entryPoint": 1063,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "update_byte_slice_dynamic32": {
              "entryPoint": 875,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "update_storage_value_t_uint256_to_t_uint256": {
              "entryPoint": 1021,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "validator_revert_t_address": {
              "entryPoint": 582,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "zero_value_for_split_t_uint256": {
              "entryPoint": 1058,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nativeSrc": "0:6778:10",
                "nodeType": "YulBlock",
                "src": "0:6778:10",
                "statements": [
                  {
                    "body": {
                      "nativeSrc": "47:35:10",
                      "nodeType": "YulBlock",
                      "src": "47:35:10",
                      "statements": [
                        {
                          "nativeSrc": "57:19:10",
                          "nodeType": "YulAssignment",
                          "src": "57:19:10",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "73:2:10",
                                "nodeType": "YulLiteral",
                                "src": "73:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nativeSrc": "67:5:10",
                              "nodeType": "YulIdentifier",
                              "src": "67:5:10"
                            },
                            "nativeSrc": "67:9:10",
                            "nodeType": "YulFunctionCall",
                            "src": "67:9:10"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nativeSrc": "57:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "57:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "allocate_unbounded",
                    "nativeSrc": "7:75:10",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nativeSrc": "40:6:10",
                        "nodeType": "YulTypedName",
                        "src": "40:6:10",
                        "type": ""
                      }
                    ],
                    "src": "7:75:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "177:28:10",
                      "nodeType": "YulBlock",
                      "src": "177:28:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "194:1:10",
                                "nodeType": "YulLiteral",
                                "src": "194:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "197:1:10",
                                "nodeType": "YulLiteral",
                                "src": "197:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nativeSrc": "187:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "187:6:10"
                            },
                            "nativeSrc": "187:12:10",
                            "nodeType": "YulFunctionCall",
                            "src": "187:12:10"
                          },
                          "nativeSrc": "187:12:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "187:12:10"
                        }
                      ]
                    },
                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    "nativeSrc": "88:117:10",
                    "nodeType": "YulFunctionDefinition",
                    "src": "88:117:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "300:28:10",
                      "nodeType": "YulBlock",
                      "src": "300:28:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "317:1:10",
                                "nodeType": "YulLiteral",
                                "src": "317:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "320:1:10",
                                "nodeType": "YulLiteral",
                                "src": "320:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nativeSrc": "310:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "310:6:10"
                            },
                            "nativeSrc": "310:12:10",
                            "nodeType": "YulFunctionCall",
                            "src": "310:12:10"
                          },
                          "nativeSrc": "310:12:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "310:12:10"
                        }
                      ]
                    },
                    "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                    "nativeSrc": "211:117:10",
                    "nodeType": "YulFunctionDefinition",
                    "src": "211:117:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "379:81:10",
                      "nodeType": "YulBlock",
                      "src": "379:81:10",
                      "statements": [
                        {
                          "nativeSrc": "389:65:10",
                          "nodeType": "YulAssignment",
                          "src": "389:65:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "404:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "404:5:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "411:42:10",
                                "nodeType": "YulLiteral",
                                "src": "411:42:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "400:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "400:3:10"
                            },
                            "nativeSrc": "400:54:10",
                            "nodeType": "YulFunctionCall",
                            "src": "400:54:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nativeSrc": "389:7:10",
                              "nodeType": "YulIdentifier",
                              "src": "389:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint160",
                    "nativeSrc": "334:126:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "361:5:10",
                        "nodeType": "YulTypedName",
                        "src": "361:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nativeSrc": "371:7:10",
                        "nodeType": "YulTypedName",
                        "src": "371:7:10",
                        "type": ""
                      }
                    ],
                    "src": "334:126:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "511:51:10",
                      "nodeType": "YulBlock",
                      "src": "511:51:10",
                      "statements": [
                        {
                          "nativeSrc": "521:35:10",
                          "nodeType": "YulAssignment",
                          "src": "521:35:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "550:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "550:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nativeSrc": "532:17:10",
                              "nodeType": "YulIdentifier",
                              "src": "532:17:10"
                            },
                            "nativeSrc": "532:24:10",
                            "nodeType": "YulFunctionCall",
                            "src": "532:24:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nativeSrc": "521:7:10",
                              "nodeType": "YulIdentifier",
                              "src": "521:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_address",
                    "nativeSrc": "466:96:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "493:5:10",
                        "nodeType": "YulTypedName",
                        "src": "493:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nativeSrc": "503:7:10",
                        "nodeType": "YulTypedName",
                        "src": "503:7:10",
                        "type": ""
                      }
                    ],
                    "src": "466:96:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "611:79:10",
                      "nodeType": "YulBlock",
                      "src": "611:79:10",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "668:16:10",
                            "nodeType": "YulBlock",
                            "src": "668:16:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "677:1:10",
                                      "nodeType": "YulLiteral",
                                      "src": "677:1:10",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "680:1:10",
                                      "nodeType": "YulLiteral",
                                      "src": "680:1:10",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "670:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "670:6:10"
                                  },
                                  "nativeSrc": "670:12:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "670:12:10"
                                },
                                "nativeSrc": "670:12:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "670:12:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "634:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "634:5:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "659:5:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "659:5:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nativeSrc": "641:17:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "641:17:10"
                                    },
                                    "nativeSrc": "641:24:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "641:24:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "631:2:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "631:2:10"
                                },
                                "nativeSrc": "631:35:10",
                                "nodeType": "YulFunctionCall",
                                "src": "631:35:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "624:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "624:6:10"
                            },
                            "nativeSrc": "624:43:10",
                            "nodeType": "YulFunctionCall",
                            "src": "624:43:10"
                          },
                          "nativeSrc": "621:63:10",
                          "nodeType": "YulIf",
                          "src": "621:63:10"
                        }
                      ]
                    },
                    "name": "validator_revert_t_address",
                    "nativeSrc": "568:122:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "604:5:10",
                        "nodeType": "YulTypedName",
                        "src": "604:5:10",
                        "type": ""
                      }
                    ],
                    "src": "568:122:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "759:80:10",
                      "nodeType": "YulBlock",
                      "src": "759:80:10",
                      "statements": [
                        {
                          "nativeSrc": "769:22:10",
                          "nodeType": "YulAssignment",
                          "src": "769:22:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "784:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "784:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nativeSrc": "778:5:10",
                              "nodeType": "YulIdentifier",
                              "src": "778:5:10"
                            },
                            "nativeSrc": "778:13:10",
                            "nodeType": "YulFunctionCall",
                            "src": "778:13:10"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nativeSrc": "769:5:10",
                              "nodeType": "YulIdentifier",
                              "src": "769:5:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "827:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "827:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_address",
                              "nativeSrc": "800:26:10",
                              "nodeType": "YulIdentifier",
                              "src": "800:26:10"
                            },
                            "nativeSrc": "800:33:10",
                            "nodeType": "YulFunctionCall",
                            "src": "800:33:10"
                          },
                          "nativeSrc": "800:33:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "800:33:10"
                        }
                      ]
                    },
                    "name": "abi_decode_t_address_fromMemory",
                    "nativeSrc": "696:143:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nativeSrc": "737:6:10",
                        "nodeType": "YulTypedName",
                        "src": "737:6:10",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nativeSrc": "745:3:10",
                        "nodeType": "YulTypedName",
                        "src": "745:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nativeSrc": "753:5:10",
                        "nodeType": "YulTypedName",
                        "src": "753:5:10",
                        "type": ""
                      }
                    ],
                    "src": "696:143:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "922:274:10",
                      "nodeType": "YulBlock",
                      "src": "922:274:10",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "968:83:10",
                            "nodeType": "YulBlock",
                            "src": "968:83:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nativeSrc": "970:77:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "970:77:10"
                                  },
                                  "nativeSrc": "970:79:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "970:79:10"
                                },
                                "nativeSrc": "970:79:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "970:79:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "943:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "943:7:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "952:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "952:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "939:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "939:3:10"
                                },
                                "nativeSrc": "939:23:10",
                                "nodeType": "YulFunctionCall",
                                "src": "939:23:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "964:2:10",
                                "nodeType": "YulLiteral",
                                "src": "964:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "935:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "935:3:10"
                            },
                            "nativeSrc": "935:32:10",
                            "nodeType": "YulFunctionCall",
                            "src": "935:32:10"
                          },
                          "nativeSrc": "932:119:10",
                          "nodeType": "YulIf",
                          "src": "932:119:10"
                        },
                        {
                          "nativeSrc": "1061:128:10",
                          "nodeType": "YulBlock",
                          "src": "1061:128:10",
                          "statements": [
                            {
                              "nativeSrc": "1076:15:10",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1076:15:10",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1090:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1090:1:10",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "1080:6:10",
                                  "nodeType": "YulTypedName",
                                  "src": "1080:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1105:74:10",
                              "nodeType": "YulAssignment",
                              "src": "1105:74:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1151:9:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "1151:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "1162:6:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "1162:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1147:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "1147:3:10"
                                    },
                                    "nativeSrc": "1147:22:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1147:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "1171:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "1171:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address_fromMemory",
                                  "nativeSrc": "1115:31:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "1115:31:10"
                                },
                                "nativeSrc": "1115:64:10",
                                "nodeType": "YulFunctionCall",
                                "src": "1115:64:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1105:6:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "1105:6:10"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address_fromMemory",
                    "nativeSrc": "845:351:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "892:9:10",
                        "nodeType": "YulTypedName",
                        "src": "892:9:10",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "903:7:10",
                        "nodeType": "YulTypedName",
                        "src": "903:7:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "915:6:10",
                        "nodeType": "YulTypedName",
                        "src": "915:6:10",
                        "type": ""
                      }
                    ],
                    "src": "845:351:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "1261:40:10",
                      "nodeType": "YulBlock",
                      "src": "1261:40:10",
                      "statements": [
                        {
                          "nativeSrc": "1272:22:10",
                          "nodeType": "YulAssignment",
                          "src": "1272:22:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "1288:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "1288:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nativeSrc": "1282:5:10",
                              "nodeType": "YulIdentifier",
                              "src": "1282:5:10"
                            },
                            "nativeSrc": "1282:12:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1282:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nativeSrc": "1272:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1272:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_string_memory_ptr",
                    "nativeSrc": "1202:99:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "1244:5:10",
                        "nodeType": "YulTypedName",
                        "src": "1244:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nativeSrc": "1254:6:10",
                        "nodeType": "YulTypedName",
                        "src": "1254:6:10",
                        "type": ""
                      }
                    ],
                    "src": "1202:99:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "1335:152:10",
                      "nodeType": "YulBlock",
                      "src": "1335:152:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "1352:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1352:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1355:77:10",
                                "nodeType": "YulLiteral",
                                "src": "1355:77:10",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "1345:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1345:6:10"
                            },
                            "nativeSrc": "1345:88:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1345:88:10"
                          },
                          "nativeSrc": "1345:88:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "1345:88:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "1449:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1449:1:10",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1452:4:10",
                                "nodeType": "YulLiteral",
                                "src": "1452:4:10",
                                "type": "",
                                "value": "0x41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "1442:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1442:6:10"
                            },
                            "nativeSrc": "1442:15:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1442:15:10"
                          },
                          "nativeSrc": "1442:15:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "1442:15:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "1473:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1473:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1476:4:10",
                                "nodeType": "YulLiteral",
                                "src": "1476:4:10",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nativeSrc": "1466:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1466:6:10"
                            },
                            "nativeSrc": "1466:15:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1466:15:10"
                          },
                          "nativeSrc": "1466:15:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "1466:15:10"
                        }
                      ]
                    },
                    "name": "panic_error_0x41",
                    "nativeSrc": "1307:180:10",
                    "nodeType": "YulFunctionDefinition",
                    "src": "1307:180:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "1521:152:10",
                      "nodeType": "YulBlock",
                      "src": "1521:152:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "1538:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1538:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1541:77:10",
                                "nodeType": "YulLiteral",
                                "src": "1541:77:10",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "1531:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1531:6:10"
                            },
                            "nativeSrc": "1531:88:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1531:88:10"
                          },
                          "nativeSrc": "1531:88:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "1531:88:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "1635:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1635:1:10",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1638:4:10",
                                "nodeType": "YulLiteral",
                                "src": "1638:4:10",
                                "type": "",
                                "value": "0x22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "1628:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1628:6:10"
                            },
                            "nativeSrc": "1628:15:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1628:15:10"
                          },
                          "nativeSrc": "1628:15:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "1628:15:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "1659:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1659:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1662:4:10",
                                "nodeType": "YulLiteral",
                                "src": "1662:4:10",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nativeSrc": "1652:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1652:6:10"
                            },
                            "nativeSrc": "1652:15:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1652:15:10"
                          },
                          "nativeSrc": "1652:15:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "1652:15:10"
                        }
                      ]
                    },
                    "name": "panic_error_0x22",
                    "nativeSrc": "1493:180:10",
                    "nodeType": "YulFunctionDefinition",
                    "src": "1493:180:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "1730:269:10",
                      "nodeType": "YulBlock",
                      "src": "1730:269:10",
                      "statements": [
                        {
                          "nativeSrc": "1740:22:10",
                          "nodeType": "YulAssignment",
                          "src": "1740:22:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nativeSrc": "1754:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "1754:4:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1760:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1760:1:10",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nativeSrc": "1750:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "1750:3:10"
                            },
                            "nativeSrc": "1750:12:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1750:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nativeSrc": "1740:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1740:6:10"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "1771:38:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "1771:38:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nativeSrc": "1801:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "1801:4:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1807:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1807:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "1797:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "1797:3:10"
                            },
                            "nativeSrc": "1797:12:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1797:12:10"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nativeSrc": "1775:18:10",
                              "nodeType": "YulTypedName",
                              "src": "1775:18:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "1848:51:10",
                            "nodeType": "YulBlock",
                            "src": "1848:51:10",
                            "statements": [
                              {
                                "nativeSrc": "1862:27:10",
                                "nodeType": "YulAssignment",
                                "src": "1862:27:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "1876:6:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "1876:6:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "1884:4:10",
                                      "nodeType": "YulLiteral",
                                      "src": "1884:4:10",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nativeSrc": "1872:3:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "1872:3:10"
                                  },
                                  "nativeSrc": "1872:17:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1872:17:10"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "1862:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "1862:6:10"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nativeSrc": "1828:18:10",
                                "nodeType": "YulIdentifier",
                                "src": "1828:18:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "1821:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1821:6:10"
                            },
                            "nativeSrc": "1821:26:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1821:26:10"
                          },
                          "nativeSrc": "1818:81:10",
                          "nodeType": "YulIf",
                          "src": "1818:81:10"
                        },
                        {
                          "body": {
                            "nativeSrc": "1951:42:10",
                            "nodeType": "YulBlock",
                            "src": "1951:42:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x22",
                                    "nativeSrc": "1965:16:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "1965:16:10"
                                  },
                                  "nativeSrc": "1965:18:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1965:18:10"
                                },
                                "nativeSrc": "1965:18:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "1965:18:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nativeSrc": "1915:18:10",
                                "nodeType": "YulIdentifier",
                                "src": "1915:18:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "1938:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "1938:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1946:2:10",
                                    "nodeType": "YulLiteral",
                                    "src": "1946:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "1935:2:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "1935:2:10"
                                },
                                "nativeSrc": "1935:14:10",
                                "nodeType": "YulFunctionCall",
                                "src": "1935:14:10"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nativeSrc": "1912:2:10",
                              "nodeType": "YulIdentifier",
                              "src": "1912:2:10"
                            },
                            "nativeSrc": "1912:38:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1912:38:10"
                          },
                          "nativeSrc": "1909:84:10",
                          "nodeType": "YulIf",
                          "src": "1909:84:10"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nativeSrc": "1679:320:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nativeSrc": "1714:4:10",
                        "nodeType": "YulTypedName",
                        "src": "1714:4:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nativeSrc": "1723:6:10",
                        "nodeType": "YulTypedName",
                        "src": "1723:6:10",
                        "type": ""
                      }
                    ],
                    "src": "1679:320:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2059:87:10",
                      "nodeType": "YulBlock",
                      "src": "2059:87:10",
                      "statements": [
                        {
                          "nativeSrc": "2069:11:10",
                          "nodeType": "YulAssignment",
                          "src": "2069:11:10",
                          "value": {
                            "name": "ptr",
                            "nativeSrc": "2077:3:10",
                            "nodeType": "YulIdentifier",
                            "src": "2077:3:10"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nativeSrc": "2069:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "2069:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "2097:1:10",
                                "nodeType": "YulLiteral",
                                "src": "2097:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "name": "ptr",
                                "nativeSrc": "2100:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "2100:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "2090:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "2090:6:10"
                            },
                            "nativeSrc": "2090:14:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2090:14:10"
                          },
                          "nativeSrc": "2090:14:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "2090:14:10"
                        },
                        {
                          "nativeSrc": "2113:26:10",
                          "nodeType": "YulAssignment",
                          "src": "2113:26:10",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "2131:1:10",
                                "nodeType": "YulLiteral",
                                "src": "2131:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "2134:4:10",
                                "nodeType": "YulLiteral",
                                "src": "2134:4:10",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "keccak256",
                              "nativeSrc": "2121:9:10",
                              "nodeType": "YulIdentifier",
                              "src": "2121:9:10"
                            },
                            "nativeSrc": "2121:18:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2121:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nativeSrc": "2113:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "2113:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_dataslot_t_string_storage",
                    "nativeSrc": "2005:141:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "ptr",
                        "nativeSrc": "2046:3:10",
                        "nodeType": "YulTypedName",
                        "src": "2046:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "data",
                        "nativeSrc": "2054:4:10",
                        "nodeType": "YulTypedName",
                        "src": "2054:4:10",
                        "type": ""
                      }
                    ],
                    "src": "2005:141:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2196:49:10",
                      "nodeType": "YulBlock",
                      "src": "2196:49:10",
                      "statements": [
                        {
                          "nativeSrc": "2206:33:10",
                          "nodeType": "YulAssignment",
                          "src": "2206:33:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "2224:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2224:5:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2231:2:10",
                                    "nodeType": "YulLiteral",
                                    "src": "2231:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2220:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "2220:3:10"
                                },
                                "nativeSrc": "2220:14:10",
                                "nodeType": "YulFunctionCall",
                                "src": "2220:14:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "2236:2:10",
                                "nodeType": "YulLiteral",
                                "src": "2236:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nativeSrc": "2216:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "2216:3:10"
                            },
                            "nativeSrc": "2216:23:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2216:23:10"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nativeSrc": "2206:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "2206:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "divide_by_32_ceil",
                    "nativeSrc": "2152:93:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "2179:5:10",
                        "nodeType": "YulTypedName",
                        "src": "2179:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nativeSrc": "2189:6:10",
                        "nodeType": "YulTypedName",
                        "src": "2189:6:10",
                        "type": ""
                      }
                    ],
                    "src": "2152:93:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2304:54:10",
                      "nodeType": "YulBlock",
                      "src": "2304:54:10",
                      "statements": [
                        {
                          "nativeSrc": "2314:37:10",
                          "nodeType": "YulAssignment",
                          "src": "2314:37:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "bits",
                                "nativeSrc": "2339:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "2339:4:10"
                              },
                              {
                                "name": "value",
                                "nativeSrc": "2345:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "2345:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nativeSrc": "2335:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "2335:3:10"
                            },
                            "nativeSrc": "2335:16:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2335:16:10"
                          },
                          "variableNames": [
                            {
                              "name": "newValue",
                              "nativeSrc": "2314:8:10",
                              "nodeType": "YulIdentifier",
                              "src": "2314:8:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "shift_left_dynamic",
                    "nativeSrc": "2251:107:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "bits",
                        "nativeSrc": "2279:4:10",
                        "nodeType": "YulTypedName",
                        "src": "2279:4:10",
                        "type": ""
                      },
                      {
                        "name": "value",
                        "nativeSrc": "2285:5:10",
                        "nodeType": "YulTypedName",
                        "src": "2285:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "newValue",
                        "nativeSrc": "2295:8:10",
                        "nodeType": "YulTypedName",
                        "src": "2295:8:10",
                        "type": ""
                      }
                    ],
                    "src": "2251:107:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2440:317:10",
                      "nodeType": "YulBlock",
                      "src": "2440:317:10",
                      "statements": [
                        {
                          "nativeSrc": "2450:35:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "2450:35:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "shiftBytes",
                                "nativeSrc": "2471:10:10",
                                "nodeType": "YulIdentifier",
                                "src": "2471:10:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "2483:1:10",
                                "nodeType": "YulLiteral",
                                "src": "2483:1:10",
                                "type": "",
                                "value": "8"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nativeSrc": "2467:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "2467:3:10"
                            },
                            "nativeSrc": "2467:18:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2467:18:10"
                          },
                          "variables": [
                            {
                              "name": "shiftBits",
                              "nativeSrc": "2454:9:10",
                              "nodeType": "YulTypedName",
                              "src": "2454:9:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "2494:109:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "2494:109:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "shiftBits",
                                "nativeSrc": "2525:9:10",
                                "nodeType": "YulIdentifier",
                                "src": "2525:9:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "2536:66:10",
                                "nodeType": "YulLiteral",
                                "src": "2536:66:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shift_left_dynamic",
                              "nativeSrc": "2506:18:10",
                              "nodeType": "YulIdentifier",
                              "src": "2506:18:10"
                            },
                            "nativeSrc": "2506:97:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2506:97:10"
                          },
                          "variables": [
                            {
                              "name": "mask",
                              "nativeSrc": "2498:4:10",
                              "nodeType": "YulTypedName",
                              "src": "2498:4:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "2612:51:10",
                          "nodeType": "YulAssignment",
                          "src": "2612:51:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "shiftBits",
                                "nativeSrc": "2643:9:10",
                                "nodeType": "YulIdentifier",
                                "src": "2643:9:10"
                              },
                              {
                                "name": "toInsert",
                                "nativeSrc": "2654:8:10",
                                "nodeType": "YulIdentifier",
                                "src": "2654:8:10"
                              }
                            ],
                            "functionName": {
                              "name": "shift_left_dynamic",
                              "nativeSrc": "2624:18:10",
                              "nodeType": "YulIdentifier",
                              "src": "2624:18:10"
                            },
                            "nativeSrc": "2624:39:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2624:39:10"
                          },
                          "variableNames": [
                            {
                              "name": "toInsert",
                              "nativeSrc": "2612:8:10",
                              "nodeType": "YulIdentifier",
                              "src": "2612:8:10"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "2672:30:10",
                          "nodeType": "YulAssignment",
                          "src": "2672:30:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "2685:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "2685:5:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "mask",
                                    "nativeSrc": "2696:4:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2696:4:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nativeSrc": "2692:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "2692:3:10"
                                },
                                "nativeSrc": "2692:9:10",
                                "nodeType": "YulFunctionCall",
                                "src": "2692:9:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "2681:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "2681:3:10"
                            },
                            "nativeSrc": "2681:21:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2681:21:10"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nativeSrc": "2672:5:10",
                              "nodeType": "YulIdentifier",
                              "src": "2672:5:10"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "2711:40:10",
                          "nodeType": "YulAssignment",
                          "src": "2711:40:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "2724:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "2724:5:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "toInsert",
                                    "nativeSrc": "2735:8:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2735:8:10"
                                  },
                                  {
                                    "name": "mask",
                                    "nativeSrc": "2745:4:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2745:4:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "2731:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "2731:3:10"
                                },
                                "nativeSrc": "2731:19:10",
                                "nodeType": "YulFunctionCall",
                                "src": "2731:19:10"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nativeSrc": "2721:2:10",
                              "nodeType": "YulIdentifier",
                              "src": "2721:2:10"
                            },
                            "nativeSrc": "2721:30:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2721:30:10"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nativeSrc": "2711:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "2711:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "update_byte_slice_dynamic32",
                    "nativeSrc": "2364:393:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "2401:5:10",
                        "nodeType": "YulTypedName",
                        "src": "2401:5:10",
                        "type": ""
                      },
                      {
                        "name": "shiftBytes",
                        "nativeSrc": "2408:10:10",
                        "nodeType": "YulTypedName",
                        "src": "2408:10:10",
                        "type": ""
                      },
                      {
                        "name": "toInsert",
                        "nativeSrc": "2420:8:10",
                        "nodeType": "YulTypedName",
                        "src": "2420:8:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nativeSrc": "2433:6:10",
                        "nodeType": "YulTypedName",
                        "src": "2433:6:10",
                        "type": ""
                      }
                    ],
                    "src": "2364:393:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2808:32:10",
                      "nodeType": "YulBlock",
                      "src": "2808:32:10",
                      "statements": [
                        {
                          "nativeSrc": "2818:16:10",
                          "nodeType": "YulAssignment",
                          "src": "2818:16:10",
                          "value": {
                            "name": "value",
                            "nativeSrc": "2829:5:10",
                            "nodeType": "YulIdentifier",
                            "src": "2829:5:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nativeSrc": "2818:7:10",
                              "nodeType": "YulIdentifier",
                              "src": "2818:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint256",
                    "nativeSrc": "2763:77:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "2790:5:10",
                        "nodeType": "YulTypedName",
                        "src": "2790:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nativeSrc": "2800:7:10",
                        "nodeType": "YulTypedName",
                        "src": "2800:7:10",
                        "type": ""
                      }
                    ],
                    "src": "2763:77:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2878:28:10",
                      "nodeType": "YulBlock",
                      "src": "2878:28:10",
                      "statements": [
                        {
                          "nativeSrc": "2888:12:10",
                          "nodeType": "YulAssignment",
                          "src": "2888:12:10",
                          "value": {
                            "name": "value",
                            "nativeSrc": "2895:5:10",
                            "nodeType": "YulIdentifier",
                            "src": "2895:5:10"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nativeSrc": "2888:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "2888:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "identity",
                    "nativeSrc": "2846:60:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "2864:5:10",
                        "nodeType": "YulTypedName",
                        "src": "2864:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nativeSrc": "2874:3:10",
                        "nodeType": "YulTypedName",
                        "src": "2874:3:10",
                        "type": ""
                      }
                    ],
                    "src": "2846:60:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2972:82:10",
                      "nodeType": "YulBlock",
                      "src": "2972:82:10",
                      "statements": [
                        {
                          "nativeSrc": "2982:66:10",
                          "nodeType": "YulAssignment",
                          "src": "2982:66:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "3040:5:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "3040:5:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nativeSrc": "3022:17:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "3022:17:10"
                                    },
                                    "nativeSrc": "3022:24:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3022:24:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "identity",
                                  "nativeSrc": "3013:8:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "3013:8:10"
                                },
                                "nativeSrc": "3013:34:10",
                                "nodeType": "YulFunctionCall",
                                "src": "3013:34:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nativeSrc": "2995:17:10",
                              "nodeType": "YulIdentifier",
                              "src": "2995:17:10"
                            },
                            "nativeSrc": "2995:53:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2995:53:10"
                          },
                          "variableNames": [
                            {
                              "name": "converted",
                              "nativeSrc": "2982:9:10",
                              "nodeType": "YulIdentifier",
                              "src": "2982:9:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "convert_t_uint256_to_t_uint256",
                    "nativeSrc": "2912:142:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "2952:5:10",
                        "nodeType": "YulTypedName",
                        "src": "2952:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "converted",
                        "nativeSrc": "2962:9:10",
                        "nodeType": "YulTypedName",
                        "src": "2962:9:10",
                        "type": ""
                      }
                    ],
                    "src": "2912:142:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3107:28:10",
                      "nodeType": "YulBlock",
                      "src": "3107:28:10",
                      "statements": [
                        {
                          "nativeSrc": "3117:12:10",
                          "nodeType": "YulAssignment",
                          "src": "3117:12:10",
                          "value": {
                            "name": "value",
                            "nativeSrc": "3124:5:10",
                            "nodeType": "YulIdentifier",
                            "src": "3124:5:10"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nativeSrc": "3117:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "3117:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "prepare_store_t_uint256",
                    "nativeSrc": "3060:75:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "3093:5:10",
                        "nodeType": "YulTypedName",
                        "src": "3093:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nativeSrc": "3103:3:10",
                        "nodeType": "YulTypedName",
                        "src": "3103:3:10",
                        "type": ""
                      }
                    ],
                    "src": "3060:75:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3217:193:10",
                      "nodeType": "YulBlock",
                      "src": "3217:193:10",
                      "statements": [
                        {
                          "nativeSrc": "3227:63:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "3227:63:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value_0",
                                "nativeSrc": "3282:7:10",
                                "nodeType": "YulIdentifier",
                                "src": "3282:7:10"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_uint256_to_t_uint256",
                              "nativeSrc": "3251:30:10",
                              "nodeType": "YulIdentifier",
                              "src": "3251:30:10"
                            },
                            "nativeSrc": "3251:39:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3251:39:10"
                          },
                          "variables": [
                            {
                              "name": "convertedValue_0",
                              "nativeSrc": "3231:16:10",
                              "nodeType": "YulTypedName",
                              "src": "3231:16:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "slot",
                                "nativeSrc": "3306:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "3306:4:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot",
                                        "nativeSrc": "3346:4:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "3346:4:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nativeSrc": "3340:5:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "3340:5:10"
                                    },
                                    "nativeSrc": "3340:11:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3340:11:10"
                                  },
                                  {
                                    "name": "offset",
                                    "nativeSrc": "3353:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3353:6:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "convertedValue_0",
                                        "nativeSrc": "3385:16:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "3385:16:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "prepare_store_t_uint256",
                                      "nativeSrc": "3361:23:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "3361:23:10"
                                    },
                                    "nativeSrc": "3361:41:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3361:41:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "update_byte_slice_dynamic32",
                                  "nativeSrc": "3312:27:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "3312:27:10"
                                },
                                "nativeSrc": "3312:91:10",
                                "nodeType": "YulFunctionCall",
                                "src": "3312:91:10"
                              }
                            ],
                            "functionName": {
                              "name": "sstore",
                              "nativeSrc": "3299:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "3299:6:10"
                            },
                            "nativeSrc": "3299:105:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3299:105:10"
                          },
                          "nativeSrc": "3299:105:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "3299:105:10"
                        }
                      ]
                    },
                    "name": "update_storage_value_t_uint256_to_t_uint256",
                    "nativeSrc": "3141:269:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "slot",
                        "nativeSrc": "3194:4:10",
                        "nodeType": "YulTypedName",
                        "src": "3194:4:10",
                        "type": ""
                      },
                      {
                        "name": "offset",
                        "nativeSrc": "3200:6:10",
                        "nodeType": "YulTypedName",
                        "src": "3200:6:10",
                        "type": ""
                      },
                      {
                        "name": "value_0",
                        "nativeSrc": "3208:7:10",
                        "nodeType": "YulTypedName",
                        "src": "3208:7:10",
                        "type": ""
                      }
                    ],
                    "src": "3141:269:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3465:24:10",
                      "nodeType": "YulBlock",
                      "src": "3465:24:10",
                      "statements": [
                        {
                          "nativeSrc": "3475:8:10",
                          "nodeType": "YulAssignment",
                          "src": "3475:8:10",
                          "value": {
                            "kind": "number",
                            "nativeSrc": "3482:1:10",
                            "nodeType": "YulLiteral",
                            "src": "3482:1:10",
                            "type": "",
                            "value": "0"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nativeSrc": "3475:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "3475:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "zero_value_for_split_t_uint256",
                    "nativeSrc": "3416:73:10",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nativeSrc": "3461:3:10",
                        "nodeType": "YulTypedName",
                        "src": "3461:3:10",
                        "type": ""
                      }
                    ],
                    "src": "3416:73:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3548:136:10",
                      "nodeType": "YulBlock",
                      "src": "3548:136:10",
                      "statements": [
                        {
                          "nativeSrc": "3558:46:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "3558:46:10",
                          "value": {
                            "arguments": [],
                            "functionName": {
                              "name": "zero_value_for_split_t_uint256",
                              "nativeSrc": "3572:30:10",
                              "nodeType": "YulIdentifier",
                              "src": "3572:30:10"
                            },
                            "nativeSrc": "3572:32:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3572:32:10"
                          },
                          "variables": [
                            {
                              "name": "zero_0",
                              "nativeSrc": "3562:6:10",
                              "nodeType": "YulTypedName",
                              "src": "3562:6:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "slot",
                                "nativeSrc": "3657:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "3657:4:10"
                              },
                              {
                                "name": "offset",
                                "nativeSrc": "3663:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "3663:6:10"
                              },
                              {
                                "name": "zero_0",
                                "nativeSrc": "3671:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "3671:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "update_storage_value_t_uint256_to_t_uint256",
                              "nativeSrc": "3613:43:10",
                              "nodeType": "YulIdentifier",
                              "src": "3613:43:10"
                            },
                            "nativeSrc": "3613:65:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3613:65:10"
                          },
                          "nativeSrc": "3613:65:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "3613:65:10"
                        }
                      ]
                    },
                    "name": "storage_set_to_zero_t_uint256",
                    "nativeSrc": "3495:189:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "slot",
                        "nativeSrc": "3534:4:10",
                        "nodeType": "YulTypedName",
                        "src": "3534:4:10",
                        "type": ""
                      },
                      {
                        "name": "offset",
                        "nativeSrc": "3540:6:10",
                        "nodeType": "YulTypedName",
                        "src": "3540:6:10",
                        "type": ""
                      }
                    ],
                    "src": "3495:189:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3740:136:10",
                      "nodeType": "YulBlock",
                      "src": "3740:136:10",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "3807:63:10",
                            "nodeType": "YulBlock",
                            "src": "3807:63:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "start",
                                      "nativeSrc": "3851:5:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "3851:5:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "3858:1:10",
                                      "nodeType": "YulLiteral",
                                      "src": "3858:1:10",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "storage_set_to_zero_t_uint256",
                                    "nativeSrc": "3821:29:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3821:29:10"
                                  },
                                  "nativeSrc": "3821:39:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "3821:39:10"
                                },
                                "nativeSrc": "3821:39:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "3821:39:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "start",
                                "nativeSrc": "3760:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "3760:5:10"
                              },
                              {
                                "name": "end",
                                "nativeSrc": "3767:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "3767:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nativeSrc": "3757:2:10",
                              "nodeType": "YulIdentifier",
                              "src": "3757:2:10"
                            },
                            "nativeSrc": "3757:14:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3757:14:10"
                          },
                          "nativeSrc": "3750:120:10",
                          "nodeType": "YulForLoop",
                          "post": {
                            "nativeSrc": "3772:26:10",
                            "nodeType": "YulBlock",
                            "src": "3772:26:10",
                            "statements": [
                              {
                                "nativeSrc": "3774:22:10",
                                "nodeType": "YulAssignment",
                                "src": "3774:22:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "start",
                                      "nativeSrc": "3787:5:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "3787:5:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "3794:1:10",
                                      "nodeType": "YulLiteral",
                                      "src": "3794:1:10",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "3783:3:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3783:3:10"
                                  },
                                  "nativeSrc": "3783:13:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "3783:13:10"
                                },
                                "variableNames": [
                                  {
                                    "name": "start",
                                    "nativeSrc": "3774:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3774:5:10"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nativeSrc": "3754:2:10",
                            "nodeType": "YulBlock",
                            "src": "3754:2:10",
                            "statements": []
                          },
                          "src": "3750:120:10"
                        }
                      ]
                    },
                    "name": "clear_storage_range_t_bytes1",
                    "nativeSrc": "3690:186:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "start",
                        "nativeSrc": "3728:5:10",
                        "nodeType": "YulTypedName",
                        "src": "3728:5:10",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nativeSrc": "3735:3:10",
                        "nodeType": "YulTypedName",
                        "src": "3735:3:10",
                        "type": ""
                      }
                    ],
                    "src": "3690:186:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3961:464:10",
                      "nodeType": "YulBlock",
                      "src": "3961:464:10",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "3987:431:10",
                            "nodeType": "YulBlock",
                            "src": "3987:431:10",
                            "statements": [
                              {
                                "nativeSrc": "4001:54:10",
                                "nodeType": "YulVariableDeclaration",
                                "src": "4001:54:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "array",
                                      "nativeSrc": "4049:5:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "4049:5:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "array_dataslot_t_string_storage",
                                    "nativeSrc": "4017:31:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4017:31:10"
                                  },
                                  "nativeSrc": "4017:38:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4017:38:10"
                                },
                                "variables": [
                                  {
                                    "name": "dataArea",
                                    "nativeSrc": "4005:8:10",
                                    "nodeType": "YulTypedName",
                                    "src": "4005:8:10",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "nativeSrc": "4068:63:10",
                                "nodeType": "YulVariableDeclaration",
                                "src": "4068:63:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "dataArea",
                                      "nativeSrc": "4091:8:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "4091:8:10"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nativeSrc": "4119:10:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "4119:10:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "divide_by_32_ceil",
                                        "nativeSrc": "4101:17:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "4101:17:10"
                                      },
                                      "nativeSrc": "4101:29:10",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4101:29:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "4087:3:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4087:3:10"
                                  },
                                  "nativeSrc": "4087:44:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4087:44:10"
                                },
                                "variables": [
                                  {
                                    "name": "deleteStart",
                                    "nativeSrc": "4072:11:10",
                                    "nodeType": "YulTypedName",
                                    "src": "4072:11:10",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "body": {
                                  "nativeSrc": "4288:27:10",
                                  "nodeType": "YulBlock",
                                  "src": "4288:27:10",
                                  "statements": [
                                    {
                                      "nativeSrc": "4290:23:10",
                                      "nodeType": "YulAssignment",
                                      "src": "4290:23:10",
                                      "value": {
                                        "name": "dataArea",
                                        "nativeSrc": "4305:8:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "4305:8:10"
                                      },
                                      "variableNames": [
                                        {
                                          "name": "deleteStart",
                                          "nativeSrc": "4290:11:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "4290:11:10"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "condition": {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nativeSrc": "4272:10:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "4272:10:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "4284:2:10",
                                      "nodeType": "YulLiteral",
                                      "src": "4284:2:10",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "lt",
                                    "nativeSrc": "4269:2:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4269:2:10"
                                  },
                                  "nativeSrc": "4269:18:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4269:18:10"
                                },
                                "nativeSrc": "4266:49:10",
                                "nodeType": "YulIf",
                                "src": "4266:49:10"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "deleteStart",
                                      "nativeSrc": "4357:11:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "4357:11:10"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "dataArea",
                                          "nativeSrc": "4374:8:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "4374:8:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "len",
                                              "nativeSrc": "4402:3:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "4402:3:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "divide_by_32_ceil",
                                            "nativeSrc": "4384:17:10",
                                            "nodeType": "YulIdentifier",
                                            "src": "4384:17:10"
                                          },
                                          "nativeSrc": "4384:22:10",
                                          "nodeType": "YulFunctionCall",
                                          "src": "4384:22:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "4370:3:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "4370:3:10"
                                      },
                                      "nativeSrc": "4370:37:10",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4370:37:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "clear_storage_range_t_bytes1",
                                    "nativeSrc": "4328:28:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4328:28:10"
                                  },
                                  "nativeSrc": "4328:80:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4328:80:10"
                                },
                                "nativeSrc": "4328:80:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "4328:80:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "len",
                                "nativeSrc": "3978:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "3978:3:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "3983:2:10",
                                "nodeType": "YulLiteral",
                                "src": "3983:2:10",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "3975:2:10",
                              "nodeType": "YulIdentifier",
                              "src": "3975:2:10"
                            },
                            "nativeSrc": "3975:11:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3975:11:10"
                          },
                          "nativeSrc": "3972:446:10",
                          "nodeType": "YulIf",
                          "src": "3972:446:10"
                        }
                      ]
                    },
                    "name": "clean_up_bytearray_end_slots_t_string_storage",
                    "nativeSrc": "3882:543:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "array",
                        "nativeSrc": "3937:5:10",
                        "nodeType": "YulTypedName",
                        "src": "3937:5:10",
                        "type": ""
                      },
                      {
                        "name": "len",
                        "nativeSrc": "3944:3:10",
                        "nodeType": "YulTypedName",
                        "src": "3944:3:10",
                        "type": ""
                      },
                      {
                        "name": "startIndex",
                        "nativeSrc": "3949:10:10",
                        "nodeType": "YulTypedName",
                        "src": "3949:10:10",
                        "type": ""
                      }
                    ],
                    "src": "3882:543:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "4494:54:10",
                      "nodeType": "YulBlock",
                      "src": "4494:54:10",
                      "statements": [
                        {
                          "nativeSrc": "4504:37:10",
                          "nodeType": "YulAssignment",
                          "src": "4504:37:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "bits",
                                "nativeSrc": "4529:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "4529:4:10"
                              },
                              {
                                "name": "value",
                                "nativeSrc": "4535:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "4535:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "shr",
                              "nativeSrc": "4525:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "4525:3:10"
                            },
                            "nativeSrc": "4525:16:10",
                            "nodeType": "YulFunctionCall",
                            "src": "4525:16:10"
                          },
                          "variableNames": [
                            {
                              "name": "newValue",
                              "nativeSrc": "4504:8:10",
                              "nodeType": "YulIdentifier",
                              "src": "4504:8:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "shift_right_unsigned_dynamic",
                    "nativeSrc": "4431:117:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "bits",
                        "nativeSrc": "4469:4:10",
                        "nodeType": "YulTypedName",
                        "src": "4469:4:10",
                        "type": ""
                      },
                      {
                        "name": "value",
                        "nativeSrc": "4475:5:10",
                        "nodeType": "YulTypedName",
                        "src": "4475:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "newValue",
                        "nativeSrc": "4485:8:10",
                        "nodeType": "YulTypedName",
                        "src": "4485:8:10",
                        "type": ""
                      }
                    ],
                    "src": "4431:117:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "4605:118:10",
                      "nodeType": "YulBlock",
                      "src": "4605:118:10",
                      "statements": [
                        {
                          "nativeSrc": "4615:68:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "4615:68:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4664:1:10",
                                        "nodeType": "YulLiteral",
                                        "src": "4664:1:10",
                                        "type": "",
                                        "value": "8"
                                      },
                                      {
                                        "name": "bytes",
                                        "nativeSrc": "4667:5:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "4667:5:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nativeSrc": "4660:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "4660:3:10"
                                    },
                                    "nativeSrc": "4660:13:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4660:13:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4679:1:10",
                                        "nodeType": "YulLiteral",
                                        "src": "4679:1:10",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "4675:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "4675:3:10"
                                    },
                                    "nativeSrc": "4675:6:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4675:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "shift_right_unsigned_dynamic",
                                  "nativeSrc": "4631:28:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4631:28:10"
                                },
                                "nativeSrc": "4631:51:10",
                                "nodeType": "YulFunctionCall",
                                "src": "4631:51:10"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nativeSrc": "4627:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "4627:3:10"
                            },
                            "nativeSrc": "4627:56:10",
                            "nodeType": "YulFunctionCall",
                            "src": "4627:56:10"
                          },
                          "variables": [
                            {
                              "name": "mask",
                              "nativeSrc": "4619:4:10",
                              "nodeType": "YulTypedName",
                              "src": "4619:4:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "4692:25:10",
                          "nodeType": "YulAssignment",
                          "src": "4692:25:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nativeSrc": "4706:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "4706:4:10"
                              },
                              {
                                "name": "mask",
                                "nativeSrc": "4712:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "4712:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "4702:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "4702:3:10"
                            },
                            "nativeSrc": "4702:15:10",
                            "nodeType": "YulFunctionCall",
                            "src": "4702:15:10"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nativeSrc": "4692:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "4692:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "mask_bytes_dynamic",
                    "nativeSrc": "4554:169:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nativeSrc": "4582:4:10",
                        "nodeType": "YulTypedName",
                        "src": "4582:4:10",
                        "type": ""
                      },
                      {
                        "name": "bytes",
                        "nativeSrc": "4588:5:10",
                        "nodeType": "YulTypedName",
                        "src": "4588:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nativeSrc": "4598:6:10",
                        "nodeType": "YulTypedName",
                        "src": "4598:6:10",
                        "type": ""
                      }
                    ],
                    "src": "4554:169:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "4809:214:10",
                      "nodeType": "YulBlock",
                      "src": "4809:214:10",
                      "statements": [
                        {
                          "nativeSrc": "4942:37:10",
                          "nodeType": "YulAssignment",
                          "src": "4942:37:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nativeSrc": "4969:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "4969:4:10"
                              },
                              {
                                "name": "len",
                                "nativeSrc": "4975:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "4975:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "mask_bytes_dynamic",
                              "nativeSrc": "4950:18:10",
                              "nodeType": "YulIdentifier",
                              "src": "4950:18:10"
                            },
                            "nativeSrc": "4950:29:10",
                            "nodeType": "YulFunctionCall",
                            "src": "4950:29:10"
                          },
                          "variableNames": [
                            {
                              "name": "data",
                              "nativeSrc": "4942:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "4942:4:10"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "4988:29:10",
                          "nodeType": "YulAssignment",
                          "src": "4988:29:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nativeSrc": "4999:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "4999:4:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5009:1:10",
                                    "nodeType": "YulLiteral",
                                    "src": "5009:1:10",
                                    "type": "",
                                    "value": "2"
                                  },
                                  {
                                    "name": "len",
                                    "nativeSrc": "5012:3:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5012:3:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "5005:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5005:3:10"
                                },
                                "nativeSrc": "5005:11:10",
                                "nodeType": "YulFunctionCall",
                                "src": "5005:11:10"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nativeSrc": "4996:2:10",
                              "nodeType": "YulIdentifier",
                              "src": "4996:2:10"
                            },
                            "nativeSrc": "4996:21:10",
                            "nodeType": "YulFunctionCall",
                            "src": "4996:21:10"
                          },
                          "variableNames": [
                            {
                              "name": "used",
                              "nativeSrc": "4988:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "4988:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                    "nativeSrc": "4728:295:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nativeSrc": "4790:4:10",
                        "nodeType": "YulTypedName",
                        "src": "4790:4:10",
                        "type": ""
                      },
                      {
                        "name": "len",
                        "nativeSrc": "4796:3:10",
                        "nodeType": "YulTypedName",
                        "src": "4796:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "used",
                        "nativeSrc": "4804:4:10",
                        "nodeType": "YulTypedName",
                        "src": "4804:4:10",
                        "type": ""
                      }
                    ],
                    "src": "4728:295:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "5120:1303:10",
                      "nodeType": "YulBlock",
                      "src": "5120:1303:10",
                      "statements": [
                        {
                          "nativeSrc": "5131:51:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "5131:51:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "src",
                                "nativeSrc": "5178:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "5178:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_string_memory_ptr",
                              "nativeSrc": "5145:32:10",
                              "nodeType": "YulIdentifier",
                              "src": "5145:32:10"
                            },
                            "nativeSrc": "5145:37:10",
                            "nodeType": "YulFunctionCall",
                            "src": "5145:37:10"
                          },
                          "variables": [
                            {
                              "name": "newLen",
                              "nativeSrc": "5135:6:10",
                              "nodeType": "YulTypedName",
                              "src": "5135:6:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "5267:22:10",
                            "nodeType": "YulBlock",
                            "src": "5267:22:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nativeSrc": "5269:16:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5269:16:10"
                                  },
                                  "nativeSrc": "5269:18:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5269:18:10"
                                },
                                "nativeSrc": "5269:18:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "5269:18:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "newLen",
                                "nativeSrc": "5239:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "5239:6:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "5247:18:10",
                                "nodeType": "YulLiteral",
                                "src": "5247:18:10",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "5236:2:10",
                              "nodeType": "YulIdentifier",
                              "src": "5236:2:10"
                            },
                            "nativeSrc": "5236:30:10",
                            "nodeType": "YulFunctionCall",
                            "src": "5236:30:10"
                          },
                          "nativeSrc": "5233:56:10",
                          "nodeType": "YulIf",
                          "src": "5233:56:10"
                        },
                        {
                          "nativeSrc": "5299:52:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "5299:52:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "5345:4:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5345:4:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nativeSrc": "5339:5:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5339:5:10"
                                },
                                "nativeSrc": "5339:11:10",
                                "nodeType": "YulFunctionCall",
                                "src": "5339:11:10"
                              }
                            ],
                            "functionName": {
                              "name": "extract_byte_array_length",
                              "nativeSrc": "5313:25:10",
                              "nodeType": "YulIdentifier",
                              "src": "5313:25:10"
                            },
                            "nativeSrc": "5313:38:10",
                            "nodeType": "YulFunctionCall",
                            "src": "5313:38:10"
                          },
                          "variables": [
                            {
                              "name": "oldLen",
                              "nativeSrc": "5303:6:10",
                              "nodeType": "YulTypedName",
                              "src": "5303:6:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "slot",
                                "nativeSrc": "5444:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "5444:4:10"
                              },
                              {
                                "name": "oldLen",
                                "nativeSrc": "5450:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "5450:6:10"
                              },
                              {
                                "name": "newLen",
                                "nativeSrc": "5458:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "5458:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "clean_up_bytearray_end_slots_t_string_storage",
                              "nativeSrc": "5398:45:10",
                              "nodeType": "YulIdentifier",
                              "src": "5398:45:10"
                            },
                            "nativeSrc": "5398:67:10",
                            "nodeType": "YulFunctionCall",
                            "src": "5398:67:10"
                          },
                          "nativeSrc": "5398:67:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "5398:67:10"
                        },
                        {
                          "nativeSrc": "5475:18:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "5475:18:10",
                          "value": {
                            "kind": "number",
                            "nativeSrc": "5492:1:10",
                            "nodeType": "YulLiteral",
                            "src": "5492:1:10",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "srcOffset",
                              "nativeSrc": "5479:9:10",
                              "nodeType": "YulTypedName",
                              "src": "5479:9:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "5503:17:10",
                          "nodeType": "YulAssignment",
                          "src": "5503:17:10",
                          "value": {
                            "kind": "number",
                            "nativeSrc": "5516:4:10",
                            "nodeType": "YulLiteral",
                            "src": "5516:4:10",
                            "type": "",
                            "value": "0x20"
                          },
                          "variableNames": [
                            {
                              "name": "srcOffset",
                              "nativeSrc": "5503:9:10",
                              "nodeType": "YulIdentifier",
                              "src": "5503:9:10"
                            }
                          ]
                        },
                        {
                          "cases": [
                            {
                              "body": {
                                "nativeSrc": "5567:611:10",
                                "nodeType": "YulBlock",
                                "src": "5567:611:10",
                                "statements": [
                                  {
                                    "nativeSrc": "5581:37:10",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5581:37:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "newLen",
                                          "nativeSrc": "5600:6:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "5600:6:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "5612:4:10",
                                              "nodeType": "YulLiteral",
                                              "src": "5612:4:10",
                                              "type": "",
                                              "value": "0x1f"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "not",
                                            "nativeSrc": "5608:3:10",
                                            "nodeType": "YulIdentifier",
                                            "src": "5608:3:10"
                                          },
                                          "nativeSrc": "5608:9:10",
                                          "nodeType": "YulFunctionCall",
                                          "src": "5608:9:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "5596:3:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "5596:3:10"
                                      },
                                      "nativeSrc": "5596:22:10",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5596:22:10"
                                    },
                                    "variables": [
                                      {
                                        "name": "loopEnd",
                                        "nativeSrc": "5585:7:10",
                                        "nodeType": "YulTypedName",
                                        "src": "5585:7:10",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "5632:51:10",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5632:51:10",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nativeSrc": "5678:4:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "5678:4:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_dataslot_t_string_storage",
                                        "nativeSrc": "5646:31:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "5646:31:10"
                                      },
                                      "nativeSrc": "5646:37:10",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5646:37:10"
                                    },
                                    "variables": [
                                      {
                                        "name": "dstPtr",
                                        "nativeSrc": "5636:6:10",
                                        "nodeType": "YulTypedName",
                                        "src": "5636:6:10",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "5696:10:10",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5696:10:10",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "5705:1:10",
                                      "nodeType": "YulLiteral",
                                      "src": "5705:1:10",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "5700:1:10",
                                        "nodeType": "YulTypedName",
                                        "src": "5700:1:10",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "5764:163:10",
                                      "nodeType": "YulBlock",
                                      "src": "5764:163:10",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nativeSrc": "5789:6:10",
                                                "nodeType": "YulIdentifier",
                                                "src": "5789:6:10"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "5807:3:10",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "5807:3:10"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "5812:9:10",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "5812:9:10"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "5803:3:10",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5803:3:10"
                                                    },
                                                    "nativeSrc": "5803:19:10",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "5803:19:10"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "5797:5:10",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5797:5:10"
                                                },
                                                "nativeSrc": "5797:26:10",
                                                "nodeType": "YulFunctionCall",
                                                "src": "5797:26:10"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "5782:6:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "5782:6:10"
                                            },
                                            "nativeSrc": "5782:42:10",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5782:42:10"
                                          },
                                          "nativeSrc": "5782:42:10",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "5782:42:10"
                                        },
                                        {
                                          "nativeSrc": "5841:24:10",
                                          "nodeType": "YulAssignment",
                                          "src": "5841:24:10",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nativeSrc": "5855:6:10",
                                                "nodeType": "YulIdentifier",
                                                "src": "5855:6:10"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5863:1:10",
                                                "nodeType": "YulLiteral",
                                                "src": "5863:1:10",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "5851:3:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "5851:3:10"
                                            },
                                            "nativeSrc": "5851:14:10",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5851:14:10"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "dstPtr",
                                              "nativeSrc": "5841:6:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "5841:6:10"
                                            }
                                          ]
                                        },
                                        {
                                          "nativeSrc": "5882:31:10",
                                          "nodeType": "YulAssignment",
                                          "src": "5882:31:10",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "srcOffset",
                                                "nativeSrc": "5899:9:10",
                                                "nodeType": "YulIdentifier",
                                                "src": "5899:9:10"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5910:2:10",
                                                "nodeType": "YulLiteral",
                                                "src": "5910:2:10",
                                                "type": "",
                                                "value": "32"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "5895:3:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "5895:3:10"
                                            },
                                            "nativeSrc": "5895:18:10",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5895:18:10"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "srcOffset",
                                              "nativeSrc": "5882:9:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "5882:9:10"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "5730:1:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "5730:1:10"
                                        },
                                        {
                                          "name": "loopEnd",
                                          "nativeSrc": "5733:7:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "5733:7:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "5727:2:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "5727:2:10"
                                      },
                                      "nativeSrc": "5727:14:10",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5727:14:10"
                                    },
                                    "nativeSrc": "5719:208:10",
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nativeSrc": "5742:21:10",
                                      "nodeType": "YulBlock",
                                      "src": "5742:21:10",
                                      "statements": [
                                        {
                                          "nativeSrc": "5744:17:10",
                                          "nodeType": "YulAssignment",
                                          "src": "5744:17:10",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "i",
                                                "nativeSrc": "5753:1:10",
                                                "nodeType": "YulIdentifier",
                                                "src": "5753:1:10"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5756:4:10",
                                                "nodeType": "YulLiteral",
                                                "src": "5756:4:10",
                                                "type": "",
                                                "value": "0x20"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "5749:3:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "5749:3:10"
                                            },
                                            "nativeSrc": "5749:12:10",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5749:12:10"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "5744:1:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "5744:1:10"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nativeSrc": "5723:3:10",
                                      "nodeType": "YulBlock",
                                      "src": "5723:3:10",
                                      "statements": []
                                    },
                                    "src": "5719:208:10"
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "5963:156:10",
                                      "nodeType": "YulBlock",
                                      "src": "5963:156:10",
                                      "statements": [
                                        {
                                          "nativeSrc": "5981:43:10",
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "5981:43:10",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "src",
                                                    "nativeSrc": "6008:3:10",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "6008:3:10"
                                                  },
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "6013:9:10",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "6013:9:10"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "6004:3:10",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6004:3:10"
                                                },
                                                "nativeSrc": "6004:19:10",
                                                "nodeType": "YulFunctionCall",
                                                "src": "6004:19:10"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nativeSrc": "5998:5:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "5998:5:10"
                                            },
                                            "nativeSrc": "5998:26:10",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5998:26:10"
                                          },
                                          "variables": [
                                            {
                                              "name": "lastValue",
                                              "nativeSrc": "5985:9:10",
                                              "nodeType": "YulTypedName",
                                              "src": "5985:9:10",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "dstPtr",
                                                "nativeSrc": "6048:6:10",
                                                "nodeType": "YulIdentifier",
                                                "src": "6048:6:10"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "lastValue",
                                                    "nativeSrc": "6075:9:10",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "6075:9:10"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "newLen",
                                                        "nativeSrc": "6090:6:10",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "6090:6:10"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nativeSrc": "6098:4:10",
                                                        "nodeType": "YulLiteral",
                                                        "src": "6098:4:10",
                                                        "type": "",
                                                        "value": "0x1f"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nativeSrc": "6086:3:10",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "6086:3:10"
                                                    },
                                                    "nativeSrc": "6086:17:10",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "6086:17:10"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mask_bytes_dynamic",
                                                  "nativeSrc": "6056:18:10",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6056:18:10"
                                                },
                                                "nativeSrc": "6056:48:10",
                                                "nodeType": "YulFunctionCall",
                                                "src": "6056:48:10"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "6041:6:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "6041:6:10"
                                            },
                                            "nativeSrc": "6041:64:10",
                                            "nodeType": "YulFunctionCall",
                                            "src": "6041:64:10"
                                          },
                                          "nativeSrc": "6041:64:10",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "6041:64:10"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "loopEnd",
                                          "nativeSrc": "5946:7:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "5946:7:10"
                                        },
                                        {
                                          "name": "newLen",
                                          "nativeSrc": "5955:6:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "5955:6:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "5943:2:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "5943:2:10"
                                      },
                                      "nativeSrc": "5943:19:10",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5943:19:10"
                                    },
                                    "nativeSrc": "5940:179:10",
                                    "nodeType": "YulIf",
                                    "src": "5940:179:10"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nativeSrc": "6139:4:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "6139:4:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "6153:6:10",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6153:6:10"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "6161:1:10",
                                                  "nodeType": "YulLiteral",
                                                  "src": "6161:1:10",
                                                  "type": "",
                                                  "value": "2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mul",
                                                "nativeSrc": "6149:3:10",
                                                "nodeType": "YulIdentifier",
                                                "src": "6149:3:10"
                                              },
                                              "nativeSrc": "6149:14:10",
                                              "nodeType": "YulFunctionCall",
                                              "src": "6149:14:10"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6165:1:10",
                                              "nodeType": "YulLiteral",
                                              "src": "6165:1:10",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "6145:3:10",
                                            "nodeType": "YulIdentifier",
                                            "src": "6145:3:10"
                                          },
                                          "nativeSrc": "6145:22:10",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6145:22:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sstore",
                                        "nativeSrc": "6132:6:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "6132:6:10"
                                      },
                                      "nativeSrc": "6132:36:10",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6132:36:10"
                                    },
                                    "nativeSrc": "6132:36:10",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6132:36:10"
                                  }
                                ]
                              },
                              "nativeSrc": "5560:618:10",
                              "nodeType": "YulCase",
                              "src": "5560:618:10",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "5565:1:10",
                                "nodeType": "YulLiteral",
                                "src": "5565:1:10",
                                "type": "",
                                "value": "1"
                              }
                            },
                            {
                              "body": {
                                "nativeSrc": "6195:222:10",
                                "nodeType": "YulBlock",
                                "src": "6195:222:10",
                                "statements": [
                                  {
                                    "nativeSrc": "6209:14:10",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6209:14:10",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "6222:1:10",
                                      "nodeType": "YulLiteral",
                                      "src": "6222:1:10",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "6213:5:10",
                                        "nodeType": "YulTypedName",
                                        "src": "6213:5:10",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "6246:67:10",
                                      "nodeType": "YulBlock",
                                      "src": "6246:67:10",
                                      "statements": [
                                        {
                                          "nativeSrc": "6264:35:10",
                                          "nodeType": "YulAssignment",
                                          "src": "6264:35:10",
                                          "value": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "src",
                                                    "nativeSrc": "6283:3:10",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "6283:3:10"
                                                  },
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "6288:9:10",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "6288:9:10"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "6279:3:10",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6279:3:10"
                                                },
                                                "nativeSrc": "6279:19:10",
                                                "nodeType": "YulFunctionCall",
                                                "src": "6279:19:10"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nativeSrc": "6273:5:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "6273:5:10"
                                            },
                                            "nativeSrc": "6273:26:10",
                                            "nodeType": "YulFunctionCall",
                                            "src": "6273:26:10"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "value",
                                              "nativeSrc": "6264:5:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "6264:5:10"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "name": "newLen",
                                      "nativeSrc": "6239:6:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "6239:6:10"
                                    },
                                    "nativeSrc": "6236:77:10",
                                    "nodeType": "YulIf",
                                    "src": "6236:77:10"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "slot",
                                          "nativeSrc": "6333:4:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "6333:4:10"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nativeSrc": "6392:5:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "6392:5:10"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "6399:6:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "6399:6:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "extract_used_part_and_set_length_of_short_byte_array",
                                            "nativeSrc": "6339:52:10",
                                            "nodeType": "YulIdentifier",
                                            "src": "6339:52:10"
                                          },
                                          "nativeSrc": "6339:67:10",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6339:67:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sstore",
                                        "nativeSrc": "6326:6:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "6326:6:10"
                                      },
                                      "nativeSrc": "6326:81:10",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6326:81:10"
                                    },
                                    "nativeSrc": "6326:81:10",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6326:81:10"
                                  }
                                ]
                              },
                              "nativeSrc": "6187:230:10",
                              "nodeType": "YulCase",
                              "src": "6187:230:10",
                              "value": "default"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "name": "newLen",
                                "nativeSrc": "5540:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "5540:6:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "5548:2:10",
                                "nodeType": "YulLiteral",
                                "src": "5548:2:10",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "5537:2:10",
                              "nodeType": "YulIdentifier",
                              "src": "5537:2:10"
                            },
                            "nativeSrc": "5537:14:10",
                            "nodeType": "YulFunctionCall",
                            "src": "5537:14:10"
                          },
                          "nativeSrc": "5530:887:10",
                          "nodeType": "YulSwitch",
                          "src": "5530:887:10"
                        }
                      ]
                    },
                    "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                    "nativeSrc": "5028:1395:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "slot",
                        "nativeSrc": "5109:4:10",
                        "nodeType": "YulTypedName",
                        "src": "5109:4:10",
                        "type": ""
                      },
                      {
                        "name": "src",
                        "nativeSrc": "5115:3:10",
                        "nodeType": "YulTypedName",
                        "src": "5115:3:10",
                        "type": ""
                      }
                    ],
                    "src": "5028:1395:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "6494:53:10",
                      "nodeType": "YulBlock",
                      "src": "6494:53:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "6511:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "6511:3:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "6534:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "6534:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nativeSrc": "6516:17:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "6516:17:10"
                                },
                                "nativeSrc": "6516:24:10",
                                "nodeType": "YulFunctionCall",
                                "src": "6516:24:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "6504:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "6504:6:10"
                            },
                            "nativeSrc": "6504:37:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6504:37:10"
                          },
                          "nativeSrc": "6504:37:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "6504:37:10"
                        }
                      ]
                    },
                    "name": "abi_encode_t_address_to_t_address_fromStack",
                    "nativeSrc": "6429:118:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "6482:5:10",
                        "nodeType": "YulTypedName",
                        "src": "6482:5:10",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nativeSrc": "6489:3:10",
                        "nodeType": "YulTypedName",
                        "src": "6489:3:10",
                        "type": ""
                      }
                    ],
                    "src": "6429:118:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "6651:124:10",
                      "nodeType": "YulBlock",
                      "src": "6651:124:10",
                      "statements": [
                        {
                          "nativeSrc": "6661:26:10",
                          "nodeType": "YulAssignment",
                          "src": "6661:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "6673:9:10",
                                "nodeType": "YulIdentifier",
                                "src": "6673:9:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "6684:2:10",
                                "nodeType": "YulLiteral",
                                "src": "6684:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "6669:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "6669:3:10"
                            },
                            "nativeSrc": "6669:18:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6669:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "6661:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "6661:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nativeSrc": "6741:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "6741:6:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6754:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "6754:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6765:1:10",
                                    "nodeType": "YulLiteral",
                                    "src": "6765:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6750:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "6750:3:10"
                                },
                                "nativeSrc": "6750:17:10",
                                "nodeType": "YulFunctionCall",
                                "src": "6750:17:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nativeSrc": "6697:43:10",
                              "nodeType": "YulIdentifier",
                              "src": "6697:43:10"
                            },
                            "nativeSrc": "6697:71:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6697:71:10"
                          },
                          "nativeSrc": "6697:71:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "6697:71:10"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nativeSrc": "6553:222:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "6623:9:10",
                        "nodeType": "YulTypedName",
                        "src": "6623:9:10",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "6635:6:10",
                        "nodeType": "YulTypedName",
                        "src": "6635:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "6646:4:10",
                        "nodeType": "YulTypedName",
                        "src": "6646:4:10",
                        "type": ""
                      }
                    ],
                    "src": "6553:222:10"
                  }
                ]
              },
              "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
              "id": 10,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "linkReferences": {},
          "object": "608060405234801561001057600080fd5b5060405161179438038061179483398181016040528101906100329190610272565b806040518060400160405280600481526020017f55534454000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f555344540000000000000000000000000000000000000000000000000000000081525081600390816100ae91906104ef565b5080600490816100be91906104ef565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101335760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012a91906105d0565b60405180910390fd5b6101428161014960201b60201c565b50506105eb565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061023f82610214565b9050919050565b61024f81610234565b811461025a57600080fd5b50565b60008151905061026c81610246565b92915050565b6000602082840312156102885761028761020f565b5b60006102968482850161025d565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061032057607f821691505b602082108103610333576103326102d9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261039b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261035e565b6103a5868361035e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006103ec6103e76103e2846103bd565b6103c7565b6103bd565b9050919050565b6000819050919050565b610406836103d1565b61041a610412826103f3565b84845461036b565b825550505050565b600090565b61042f610422565b61043a8184846103fd565b505050565b5b8181101561045e57610453600082610427565b600181019050610440565b5050565b601f8211156104a35761047481610339565b61047d8461034e565b8101602085101561048c578190505b6104a06104988561034e565b83018261043f565b50505b505050565b600082821c905092915050565b60006104c6600019846008026104a8565b1980831691505092915050565b60006104df83836104b5565b9150826002028217905092915050565b6104f88261029f565b67ffffffffffffffff811115610511576105106102aa565b5b61051b8254610308565b610526828285610462565b600060209050601f8311600181146105595760008415610547578287015190505b61055185826104d3565b8655506105b9565b601f19841661056786610339565b60005b8281101561058f5784890151825560018201915060208501945060208101905061056a565b868310156105ac57848901516105a8601f8916826104b5565b8355505b6001600288020188555050505b505050505050565b6105ca81610234565b82525050565b60006020820190506105e560008301846105c1565b92915050565b61119a806105fa6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610dee565b60405180910390f35b61010c60048036038101906101079190610ea9565b61032e565b6040516101199190610f04565b60405180910390f35b61012a610351565b6040516101379190610f2e565b60405180910390f35b61015a60048036038101906101559190610f49565b61035b565b6040516101679190610f04565b60405180910390f35b61017861038a565b6040516101859190610fb8565b60405180910390f35b6101a860048036038101906101a39190610ea9565b610393565b005b6101c460048036038101906101bf9190610fd3565b6103a9565b6040516101d19190610f2e565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f9919061100f565b60405180910390f35b61020a61042f565b6040516102179190610dee565b60405180910390f35b61023a60048036038101906102359190610ea9565b6104c1565b6040516102479190610f04565b60405180910390f35b61026a6004803603810190610265919061102a565b6104e4565b6040516102779190610f2e565b60405180910390f35b61029a60048036038101906102959190610fd3565b61056b565b005b6060600380546102ab90611099565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790611099565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e85858561069f565b60019150509392505050565b60006012905090565b61039b610793565b6103a5828261081a565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610793565b610403600061089c565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e90611099565b80601f016020809104026020016040519081016040528092919081815260200182805461046a90611099565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d981858561069f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610793565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc919061100f565b60405180910390fd5b6105ee8161089c565b50565b600033905090565b6106068383836001610962565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106995781811015610689578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610680939291906110ca565b60405180910390fd5b61069884848484036000610962565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107115760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610708919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107835760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077a919061100f565b60405180910390fd5b61078e838383610b39565b505050565b61079b6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107b9610405565b73ffffffffffffffffffffffffffffffffffffffff1614610818576107dc6105f1565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161080f919061100f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610883919061100f565b60405180910390fd5b61089860008383610b39565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d45760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cb919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a465760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3d919061100f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b33578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2a9190610f2e565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8b578060026000828254610b7f9190611130565b92505081905550610c5e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0e939291906110ca565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca75780600260008282540392505081905550610cf4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d519190610f2e565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d98578082015181840152602081019050610d7d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc082610d5e565b610dca8185610d69565b9350610dda818560208601610d7a565b610de381610da4565b840191505092915050565b60006020820190508181036000830152610e088184610db5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4082610e15565b9050919050565b610e5081610e35565b8114610e5b57600080fd5b50565b600081359050610e6d81610e47565b92915050565b6000819050919050565b610e8681610e73565b8114610e9157600080fd5b50565b600081359050610ea381610e7d565b92915050565b60008060408385031215610ec057610ebf610e10565b5b6000610ece85828601610e5e565b9250506020610edf85828601610e94565b9150509250929050565b60008115159050919050565b610efe81610ee9565b82525050565b6000602082019050610f196000830184610ef5565b92915050565b610f2881610e73565b82525050565b6000602082019050610f436000830184610f1f565b92915050565b600080600060608486031215610f6257610f61610e10565b5b6000610f7086828701610e5e565b9350506020610f8186828701610e5e565b9250506040610f9286828701610e94565b9150509250925092565b600060ff82169050919050565b610fb281610f9c565b82525050565b6000602082019050610fcd6000830184610fa9565b92915050565b600060208284031215610fe957610fe8610e10565b5b6000610ff784828501610e5e565b91505092915050565b61100981610e35565b82525050565b60006020820190506110246000830184611000565b92915050565b6000806040838503121561104157611040610e10565b5b600061104f85828601610e5e565b925050602061106085828601610e5e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b157607f821691505b6020821081036110c4576110c361106a565b5b50919050565b60006060820190506110df6000830186611000565b6110ec6020830185610f1f565b6110f96040830184610f1f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113b82610e73565b915061114683610e73565b925082820190508082111561115e5761115d611101565b5b9291505056fea2646970667358221220404018bc6ad07b93e6c7d5202a4df04bbdf224aa0770c9cdae9758c1d874bb5364736f6c634300081a0033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1794 CODESIZE SUB DUP1 PUSH2 0x1794 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x272 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x4EF JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x149 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F DUP3 PUSH2 0x214 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24F DUP2 PUSH2 0x234 JUMP JUMPDEST DUP2 EQ PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26C DUP2 PUSH2 0x246 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x288 JUMPI PUSH2 0x287 PUSH2 0x20F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x296 DUP5 DUP3 DUP6 ADD PUSH2 0x25D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x320 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x333 JUMPI PUSH2 0x332 PUSH2 0x2D9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x39B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x35E JUMP JUMPDEST PUSH2 0x3A5 DUP7 DUP4 PUSH2 0x35E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC PUSH2 0x3E7 PUSH2 0x3E2 DUP5 PUSH2 0x3BD JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x406 DUP4 PUSH2 0x3D1 JUMP JUMPDEST PUSH2 0x41A PUSH2 0x412 DUP3 PUSH2 0x3F3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x36B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x42F PUSH2 0x422 JUMP JUMPDEST PUSH2 0x43A DUP2 DUP5 DUP5 PUSH2 0x3FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x45E JUMPI PUSH2 0x453 PUSH1 0x0 DUP3 PUSH2 0x427 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x440 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4A3 JUMPI PUSH2 0x474 DUP2 PUSH2 0x339 JUMP JUMPDEST PUSH2 0x47D DUP5 PUSH2 0x34E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x48C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4A0 PUSH2 0x498 DUP6 PUSH2 0x34E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x43F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4A8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF DUP4 DUP4 PUSH2 0x4B5 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4F8 DUP3 PUSH2 0x29F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x511 JUMPI PUSH2 0x510 PUSH2 0x2AA JUMP JUMPDEST JUMPDEST PUSH2 0x51B DUP3 SLOAD PUSH2 0x308 JUMP JUMPDEST PUSH2 0x526 DUP3 DUP3 DUP6 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x559 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x547 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x551 DUP6 DUP3 PUSH2 0x4D3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x567 DUP7 PUSH2 0x339 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x58F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x56A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x5AC JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5A8 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4B5 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5CA DUP2 PUSH2 0x234 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x119A DUP1 PUSH2 0x5FA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x793 JUMP JUMPDEST PUSH2 0x3A5 DUP3 DUP3 PUSH2 0x81A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x0 PUSH2 0x89C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4CC PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP2 DUP6 DUP6 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x89C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x962 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x699 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x689 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x680 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x698 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x962 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x711 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x783 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78E DUP4 DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x79B PUSH2 0x5F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B9 PUSH2 0x405 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x818 JUMPI PUSH2 0x7DC PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x898 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA46 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB33 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB2A SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0x1130 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC17 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCF4 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC0 DUP3 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0xDCA DUP2 DUP6 PUSH2 0xD69 JUMP JUMPDEST SWAP4 POP PUSH2 0xDDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD7A JUMP JUMPDEST PUSH2 0xDE3 DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE08 DUP2 DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE40 DUP3 PUSH2 0xE15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xE35 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6D DUP2 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE86 DUP2 PUSH2 0xE73 JUMP JUMPDEST DUP2 EQ PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA3 DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC0 JUMPI PUSH2 0xEBF PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEDF DUP6 DUP3 DUP7 ADD PUSH2 0xE94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFE DUP2 PUSH2 0xEE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF28 DUP2 PUSH2 0xE73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF62 JUMPI PUSH2 0xF61 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF70 DUP7 DUP3 DUP8 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF81 DUP7 DUP3 DUP8 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF92 DUP7 DUP3 DUP8 ADD PUSH2 0xE94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB2 DUP2 PUSH2 0xF9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE9 JUMPI PUSH2 0xFE8 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF7 DUP5 DUP3 DUP6 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1009 DUP2 PUSH2 0xE35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1024 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1000 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1041 JUMPI PUSH2 0x1040 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104F DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1060 DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C4 JUMPI PUSH2 0x10C3 PUSH2 0x106A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10DF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x10EC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF1F JUMP JUMPDEST PUSH2 0x10F9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113B DUP3 PUSH2 0xE73 JUMP JUMPDEST SWAP2 POP PUSH2 0x1146 DUP4 PUSH2 0xE73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x115E JUMPI PUSH2 0x115D PUSH2 0x1101 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH BLOCKHASH XOR 0xBC PUSH11 0xD07B93E6C7D5202A4DF04B 0xBD CALLCODE 0x24 0xAA SMOD PUSH17 0xC9CDAE9758C1D874BB5364736F6C634300 ADDMOD BYTE STOP CALLER ",
          "sourceMap": "168:219:8:-:0;;;206:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;270:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;206:80:8;168:219;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;168:219:8:-;;;;;;;"
        },
        "deployedBytecode": {
          "functionDebugData": {
            "@_approve_690": {
              "entryPoint": 1529,
              "id": 690,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_approve_750": {
              "entryPoint": 2402,
              "id": 750,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@_checkOwner_84": {
              "entryPoint": 1939,
              "id": 84,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_mint_639": {
              "entryPoint": 2074,
              "id": 639,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_msgSender_915": {
              "entryPoint": 1521,
              "id": 915,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_spendAllowance_798": {
              "entryPoint": 1547,
              "id": 798,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_transferOwnership_146": {
              "entryPoint": 2204,
              "id": 146,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_transfer_529": {
              "entryPoint": 1695,
              "id": 529,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_update_606": {
              "entryPoint": 2873,
              "id": 606,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@allowance_426": {
              "entryPoint": 1252,
              "id": 426,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@approve_450": {
              "entryPoint": 814,
              "id": 450,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@balanceOf_385": {
              "entryPoint": 937,
              "id": 385,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@decimals_363": {
              "entryPoint": 906,
              "id": 363,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@mint_1623": {
              "entryPoint": 915,
              "id": 1623,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@name_345": {
              "entryPoint": 668,
              "id": 345,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@owner_67": {
              "entryPoint": 1029,
              "id": 67,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@renounceOwnership_98": {
              "entryPoint": 1009,
              "id": 98,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@symbol_354": {
              "entryPoint": 1071,
              "id": 354,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@totalSupply_372": {
              "entryPoint": 849,
              "id": 372,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@transferFrom_482": {
              "entryPoint": 859,
              "id": 482,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@transferOwnership_126": {
              "entryPoint": 1387,
              "id": 126,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@transfer_409": {
              "entryPoint": 1217,
              "id": 409,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_address": {
              "entryPoint": 3678,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_uint256": {
              "entryPoint": 3732,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_address": {
              "entryPoint": 4051,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_address": {
              "entryPoint": 4138,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_addresst_addresst_uint256": {
              "entryPoint": 3913,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 3
            },
            "abi_decode_tuple_t_addresst_uint256": {
              "entryPoint": 3753,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_encode_t_address_to_t_address_fromStack": {
              "entryPoint": 4096,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_bool_to_t_bool_fromStack": {
              "entryPoint": 3829,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 3509,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_t_uint256_to_t_uint256_fromStack": {
              "entryPoint": 3871,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_uint8_to_t_uint8_fromStack": {
              "entryPoint": 4009,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
              "entryPoint": 4111,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
              "entryPoint": 4298,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
              "entryPoint": 3844,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 3566,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
              "entryPoint": 3886,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
              "entryPoint": 4024,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "allocate_unbounded": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "array_length_t_string_memory_ptr": {
              "entryPoint": 3422,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
              "entryPoint": 3433,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint256": {
              "entryPoint": 4400,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "cleanup_t_address": {
              "entryPoint": 3637,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_bool": {
              "entryPoint": 3817,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint160": {
              "entryPoint": 3605,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint256": {
              "entryPoint": 3699,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint8": {
              "entryPoint": 3996,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "copy_memory_to_memory_with_cleanup": {
              "entryPoint": 3450,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "extract_byte_array_length": {
              "entryPoint": 4249,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "panic_error_0x11": {
              "entryPoint": 4353,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x22": {
              "entryPoint": 4202,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
              "entryPoint": 3600,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "round_up_to_mul_of_32": {
              "entryPoint": 3492,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "validator_revert_t_address": {
              "entryPoint": 3655,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_uint256": {
              "entryPoint": 3709,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nativeSrc": "0:7362:10",
                "nodeType": "YulBlock",
                "src": "0:7362:10",
                "statements": [
                  {
                    "body": {
                      "nativeSrc": "66:40:10",
                      "nodeType": "YulBlock",
                      "src": "66:40:10",
                      "statements": [
                        {
                          "nativeSrc": "77:22:10",
                          "nodeType": "YulAssignment",
                          "src": "77:22:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "93:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nativeSrc": "87:5:10",
                              "nodeType": "YulIdentifier",
                              "src": "87:5:10"
                            },
                            "nativeSrc": "87:12:10",
                            "nodeType": "YulFunctionCall",
                            "src": "87:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nativeSrc": "77:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "77:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_length_t_string_memory_ptr",
                    "nativeSrc": "7:99:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "49:5:10",
                        "nodeType": "YulTypedName",
                        "src": "49:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nativeSrc": "59:6:10",
                        "nodeType": "YulTypedName",
                        "src": "59:6:10",
                        "type": ""
                      }
                    ],
                    "src": "7:99:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "208:73:10",
                      "nodeType": "YulBlock",
                      "src": "208:73:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "225:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "225:3:10"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "230:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "230:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "218:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "218:6:10"
                            },
                            "nativeSrc": "218:19:10",
                            "nodeType": "YulFunctionCall",
                            "src": "218:19:10"
                          },
                          "nativeSrc": "218:19:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "218:19:10"
                        },
                        {
                          "nativeSrc": "246:29:10",
                          "nodeType": "YulAssignment",
                          "src": "246:29:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "265:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "265:3:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "270:4:10",
                                "nodeType": "YulLiteral",
                                "src": "270:4:10",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "261:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "261:3:10"
                            },
                            "nativeSrc": "261:14:10",
                            "nodeType": "YulFunctionCall",
                            "src": "261:14:10"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nativeSrc": "246:11:10",
                              "nodeType": "YulIdentifier",
                              "src": "246:11:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                    "nativeSrc": "112:169:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nativeSrc": "180:3:10",
                        "nodeType": "YulTypedName",
                        "src": "180:3:10",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nativeSrc": "185:6:10",
                        "nodeType": "YulTypedName",
                        "src": "185:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nativeSrc": "196:11:10",
                        "nodeType": "YulTypedName",
                        "src": "196:11:10",
                        "type": ""
                      }
                    ],
                    "src": "112:169:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "349:186:10",
                      "nodeType": "YulBlock",
                      "src": "349:186:10",
                      "statements": [
                        {
                          "nativeSrc": "360:10:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "360:10:10",
                          "value": {
                            "kind": "number",
                            "nativeSrc": "369:1:10",
                            "nodeType": "YulLiteral",
                            "src": "369:1:10",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nativeSrc": "364:1:10",
                              "nodeType": "YulTypedName",
                              "src": "364:1:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "429:63:10",
                            "nodeType": "YulBlock",
                            "src": "429:63:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nativeSrc": "454:3:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "454:3:10"
                                        },
                                        {
                                          "name": "i",
                                          "nativeSrc": "459:1:10",
                                          "nodeType": "YulIdentifier",
                                          "src": "459:1:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "450:3:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "450:3:10"
                                      },
                                      "nativeSrc": "450:11:10",
                                      "nodeType": "YulFunctionCall",
                                      "src": "450:11:10"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nativeSrc": "473:3:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "473:3:10"
                                            },
                                            {
                                              "name": "i",
                                              "nativeSrc": "478:1:10",
                                              "nodeType": "YulIdentifier",
                                              "src": "478:1:10"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "469:3:10",
                                            "nodeType": "YulIdentifier",
                                            "src": "469:3:10"
                                          },
                                          "nativeSrc": "469:11:10",
                                          "nodeType": "YulFunctionCall",
                                          "src": "469:11:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "463:5:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "463:5:10"
                                      },
                                      "nativeSrc": "463:18:10",
                                      "nodeType": "YulFunctionCall",
                                      "src": "463:18:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nativeSrc": "443:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "443:6:10"
                                  },
                                  "nativeSrc": "443:39:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "443:39:10"
                                },
                                "nativeSrc": "443:39:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "443:39:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nativeSrc": "390:1:10",
                                "nodeType": "YulIdentifier",
                                "src": "390:1:10"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "393:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "393:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nativeSrc": "387:2:10",
                              "nodeType": "YulIdentifier",
                              "src": "387:2:10"
                            },
                            "nativeSrc": "387:13:10",
                            "nodeType": "YulFunctionCall",
                            "src": "387:13:10"
                          },
                          "nativeSrc": "379:113:10",
                          "nodeType": "YulForLoop",
                          "post": {
                            "nativeSrc": "401:19:10",
                            "nodeType": "YulBlock",
                            "src": "401:19:10",
                            "statements": [
                              {
                                "nativeSrc": "403:15:10",
                                "nodeType": "YulAssignment",
                                "src": "403:15:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nativeSrc": "412:1:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "412:1:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "415:2:10",
                                      "nodeType": "YulLiteral",
                                      "src": "415:2:10",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "408:3:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "408:3:10"
                                  },
                                  "nativeSrc": "408:10:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "408:10:10"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "403:1:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "403:1:10"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nativeSrc": "383:3:10",
                            "nodeType": "YulBlock",
                            "src": "383:3:10",
                            "statements": []
                          },
                          "src": "379:113:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nativeSrc": "512:3:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "512:3:10"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "517:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "517:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "508:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "508:3:10"
                                },
                                "nativeSrc": "508:16:10",
                                "nodeType": "YulFunctionCall",
                                "src": "508:16:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "526:1:10",
                                "nodeType": "YulLiteral",
                                "src": "526:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "501:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "501:6:10"
                            },
                            "nativeSrc": "501:27:10",
                            "nodeType": "YulFunctionCall",
                            "src": "501:27:10"
                          },
                          "nativeSrc": "501:27:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "501:27:10"
                        }
                      ]
                    },
                    "name": "copy_memory_to_memory_with_cleanup",
                    "nativeSrc": "287:248:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nativeSrc": "331:3:10",
                        "nodeType": "YulTypedName",
                        "src": "331:3:10",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nativeSrc": "336:3:10",
                        "nodeType": "YulTypedName",
                        "src": "336:3:10",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nativeSrc": "341:6:10",
                        "nodeType": "YulTypedName",
                        "src": "341:6:10",
                        "type": ""
                      }
                    ],
                    "src": "287:248:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "589:54:10",
                      "nodeType": "YulBlock",
                      "src": "589:54:10",
                      "statements": [
                        {
                          "nativeSrc": "599:38:10",
                          "nodeType": "YulAssignment",
                          "src": "599:38:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "617:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "617:5:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "624:2:10",
                                    "nodeType": "YulLiteral",
                                    "src": "624:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "613:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "613:3:10"
                                },
                                "nativeSrc": "613:14:10",
                                "nodeType": "YulFunctionCall",
                                "src": "613:14:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "633:2:10",
                                    "nodeType": "YulLiteral",
                                    "src": "633:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nativeSrc": "629:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "629:3:10"
                                },
                                "nativeSrc": "629:7:10",
                                "nodeType": "YulFunctionCall",
                                "src": "629:7:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "609:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "609:3:10"
                            },
                            "nativeSrc": "609:28:10",
                            "nodeType": "YulFunctionCall",
                            "src": "609:28:10"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nativeSrc": "599:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "599:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "round_up_to_mul_of_32",
                    "nativeSrc": "541:102:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "572:5:10",
                        "nodeType": "YulTypedName",
                        "src": "572:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nativeSrc": "582:6:10",
                        "nodeType": "YulTypedName",
                        "src": "582:6:10",
                        "type": ""
                      }
                    ],
                    "src": "541:102:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "741:285:10",
                      "nodeType": "YulBlock",
                      "src": "741:285:10",
                      "statements": [
                        {
                          "nativeSrc": "751:53:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "751:53:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "798:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "798:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "array_length_t_string_memory_ptr",
                              "nativeSrc": "765:32:10",
                              "nodeType": "YulIdentifier",
                              "src": "765:32:10"
                            },
                            "nativeSrc": "765:39:10",
                            "nodeType": "YulFunctionCall",
                            "src": "765:39:10"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nativeSrc": "755:6:10",
                              "nodeType": "YulTypedName",
                              "src": "755:6:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nativeSrc": "813:78:10",
                          "nodeType": "YulAssignment",
                          "src": "813:78:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "879:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "879:3:10"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "884:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "884:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nativeSrc": "820:58:10",
                              "nodeType": "YulIdentifier",
                              "src": "820:58:10"
                            },
                            "nativeSrc": "820:71:10",
                            "nodeType": "YulFunctionCall",
                            "src": "820:71:10"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nativeSrc": "813:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "813:3:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "939:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "939:5:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "946:4:10",
                                    "nodeType": "YulLiteral",
                                    "src": "946:4:10",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "935:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "935:3:10"
                                },
                                "nativeSrc": "935:16:10",
                                "nodeType": "YulFunctionCall",
                                "src": "935:16:10"
                              },
                              {
                                "name": "pos",
                                "nativeSrc": "953:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "953:3:10"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "958:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "958:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "copy_memory_to_memory_with_cleanup",
                              "nativeSrc": "900:34:10",
                              "nodeType": "YulIdentifier",
                              "src": "900:34:10"
                            },
                            "nativeSrc": "900:65:10",
                            "nodeType": "YulFunctionCall",
                            "src": "900:65:10"
                          },
                          "nativeSrc": "900:65:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "900:65:10"
                        },
                        {
                          "nativeSrc": "974:46:10",
                          "nodeType": "YulAssignment",
                          "src": "974:46:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "985:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "985:3:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "1012:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "1012:6:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nativeSrc": "990:21:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "990:21:10"
                                },
                                "nativeSrc": "990:29:10",
                                "nodeType": "YulFunctionCall",
                                "src": "990:29:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "981:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "981:3:10"
                            },
                            "nativeSrc": "981:39:10",
                            "nodeType": "YulFunctionCall",
                            "src": "981:39:10"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nativeSrc": "974:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "974:3:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                    "nativeSrc": "649:377:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "722:5:10",
                        "nodeType": "YulTypedName",
                        "src": "722:5:10",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nativeSrc": "729:3:10",
                        "nodeType": "YulTypedName",
                        "src": "729:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nativeSrc": "737:3:10",
                        "nodeType": "YulTypedName",
                        "src": "737:3:10",
                        "type": ""
                      }
                    ],
                    "src": "649:377:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "1150:195:10",
                      "nodeType": "YulBlock",
                      "src": "1150:195:10",
                      "statements": [
                        {
                          "nativeSrc": "1160:26:10",
                          "nodeType": "YulAssignment",
                          "src": "1160:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "1172:9:10",
                                "nodeType": "YulIdentifier",
                                "src": "1172:9:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1183:2:10",
                                "nodeType": "YulLiteral",
                                "src": "1183:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "1168:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "1168:3:10"
                            },
                            "nativeSrc": "1168:18:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1168:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "1160:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "1160:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1207:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "1207:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1218:1:10",
                                    "nodeType": "YulLiteral",
                                    "src": "1218:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1203:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "1203:3:10"
                                },
                                "nativeSrc": "1203:17:10",
                                "nodeType": "YulFunctionCall",
                                "src": "1203:17:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nativeSrc": "1226:4:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "1226:4:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1232:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "1232:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "1222:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "1222:3:10"
                                },
                                "nativeSrc": "1222:20:10",
                                "nodeType": "YulFunctionCall",
                                "src": "1222:20:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "1196:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1196:6:10"
                            },
                            "nativeSrc": "1196:47:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1196:47:10"
                          },
                          "nativeSrc": "1196:47:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "1196:47:10"
                        },
                        {
                          "nativeSrc": "1252:86:10",
                          "nodeType": "YulAssignment",
                          "src": "1252:86:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nativeSrc": "1324:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "1324:6:10"
                              },
                              {
                                "name": "tail",
                                "nativeSrc": "1333:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "1333:4:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                              "nativeSrc": "1260:63:10",
                              "nodeType": "YulIdentifier",
                              "src": "1260:63:10"
                            },
                            "nativeSrc": "1260:78:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1260:78:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "1252:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "1252:4:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                    "nativeSrc": "1032:313:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1122:9:10",
                        "nodeType": "YulTypedName",
                        "src": "1122:9:10",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "1134:6:10",
                        "nodeType": "YulTypedName",
                        "src": "1134:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "1145:4:10",
                        "nodeType": "YulTypedName",
                        "src": "1145:4:10",
                        "type": ""
                      }
                    ],
                    "src": "1032:313:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "1391:35:10",
                      "nodeType": "YulBlock",
                      "src": "1391:35:10",
                      "statements": [
                        {
                          "nativeSrc": "1401:19:10",
                          "nodeType": "YulAssignment",
                          "src": "1401:19:10",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "1417:2:10",
                                "nodeType": "YulLiteral",
                                "src": "1417:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nativeSrc": "1411:5:10",
                              "nodeType": "YulIdentifier",
                              "src": "1411:5:10"
                            },
                            "nativeSrc": "1411:9:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1411:9:10"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nativeSrc": "1401:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1401:6:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "allocate_unbounded",
                    "nativeSrc": "1351:75:10",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nativeSrc": "1384:6:10",
                        "nodeType": "YulTypedName",
                        "src": "1384:6:10",
                        "type": ""
                      }
                    ],
                    "src": "1351:75:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "1521:28:10",
                      "nodeType": "YulBlock",
                      "src": "1521:28:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "1538:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1538:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1541:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1541:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nativeSrc": "1531:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1531:6:10"
                            },
                            "nativeSrc": "1531:12:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1531:12:10"
                          },
                          "nativeSrc": "1531:12:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "1531:12:10"
                        }
                      ]
                    },
                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    "nativeSrc": "1432:117:10",
                    "nodeType": "YulFunctionDefinition",
                    "src": "1432:117:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "1644:28:10",
                      "nodeType": "YulBlock",
                      "src": "1644:28:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "1661:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1661:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1664:1:10",
                                "nodeType": "YulLiteral",
                                "src": "1664:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nativeSrc": "1654:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1654:6:10"
                            },
                            "nativeSrc": "1654:12:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1654:12:10"
                          },
                          "nativeSrc": "1654:12:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "1654:12:10"
                        }
                      ]
                    },
                    "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                    "nativeSrc": "1555:117:10",
                    "nodeType": "YulFunctionDefinition",
                    "src": "1555:117:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "1723:81:10",
                      "nodeType": "YulBlock",
                      "src": "1723:81:10",
                      "statements": [
                        {
                          "nativeSrc": "1733:65:10",
                          "nodeType": "YulAssignment",
                          "src": "1733:65:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "1748:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "1748:5:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1755:42:10",
                                "nodeType": "YulLiteral",
                                "src": "1755:42:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "1744:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "1744:3:10"
                            },
                            "nativeSrc": "1744:54:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1744:54:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nativeSrc": "1733:7:10",
                              "nodeType": "YulIdentifier",
                              "src": "1733:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint160",
                    "nativeSrc": "1678:126:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "1705:5:10",
                        "nodeType": "YulTypedName",
                        "src": "1705:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nativeSrc": "1715:7:10",
                        "nodeType": "YulTypedName",
                        "src": "1715:7:10",
                        "type": ""
                      }
                    ],
                    "src": "1678:126:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "1855:51:10",
                      "nodeType": "YulBlock",
                      "src": "1855:51:10",
                      "statements": [
                        {
                          "nativeSrc": "1865:35:10",
                          "nodeType": "YulAssignment",
                          "src": "1865:35:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "1894:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "1894:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nativeSrc": "1876:17:10",
                              "nodeType": "YulIdentifier",
                              "src": "1876:17:10"
                            },
                            "nativeSrc": "1876:24:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1876:24:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nativeSrc": "1865:7:10",
                              "nodeType": "YulIdentifier",
                              "src": "1865:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_address",
                    "nativeSrc": "1810:96:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "1837:5:10",
                        "nodeType": "YulTypedName",
                        "src": "1837:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nativeSrc": "1847:7:10",
                        "nodeType": "YulTypedName",
                        "src": "1847:7:10",
                        "type": ""
                      }
                    ],
                    "src": "1810:96:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "1955:79:10",
                      "nodeType": "YulBlock",
                      "src": "1955:79:10",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "2012:16:10",
                            "nodeType": "YulBlock",
                            "src": "2012:16:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "2021:1:10",
                                      "nodeType": "YulLiteral",
                                      "src": "2021:1:10",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "2024:1:10",
                                      "nodeType": "YulLiteral",
                                      "src": "2024:1:10",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "2014:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2014:6:10"
                                  },
                                  "nativeSrc": "2014:12:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2014:12:10"
                                },
                                "nativeSrc": "2014:12:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "2014:12:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "1978:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "1978:5:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "2003:5:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "2003:5:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nativeSrc": "1985:17:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "1985:17:10"
                                    },
                                    "nativeSrc": "1985:24:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1985:24:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "1975:2:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "1975:2:10"
                                },
                                "nativeSrc": "1975:35:10",
                                "nodeType": "YulFunctionCall",
                                "src": "1975:35:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "1968:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "1968:6:10"
                            },
                            "nativeSrc": "1968:43:10",
                            "nodeType": "YulFunctionCall",
                            "src": "1968:43:10"
                          },
                          "nativeSrc": "1965:63:10",
                          "nodeType": "YulIf",
                          "src": "1965:63:10"
                        }
                      ]
                    },
                    "name": "validator_revert_t_address",
                    "nativeSrc": "1912:122:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "1948:5:10",
                        "nodeType": "YulTypedName",
                        "src": "1948:5:10",
                        "type": ""
                      }
                    ],
                    "src": "1912:122:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2092:87:10",
                      "nodeType": "YulBlock",
                      "src": "2092:87:10",
                      "statements": [
                        {
                          "nativeSrc": "2102:29:10",
                          "nodeType": "YulAssignment",
                          "src": "2102:29:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "2124:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "2124:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "2111:12:10",
                              "nodeType": "YulIdentifier",
                              "src": "2111:12:10"
                            },
                            "nativeSrc": "2111:20:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2111:20:10"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nativeSrc": "2102:5:10",
                              "nodeType": "YulIdentifier",
                              "src": "2102:5:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "2167:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "2167:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_address",
                              "nativeSrc": "2140:26:10",
                              "nodeType": "YulIdentifier",
                              "src": "2140:26:10"
                            },
                            "nativeSrc": "2140:33:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2140:33:10"
                          },
                          "nativeSrc": "2140:33:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "2140:33:10"
                        }
                      ]
                    },
                    "name": "abi_decode_t_address",
                    "nativeSrc": "2040:139:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nativeSrc": "2070:6:10",
                        "nodeType": "YulTypedName",
                        "src": "2070:6:10",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nativeSrc": "2078:3:10",
                        "nodeType": "YulTypedName",
                        "src": "2078:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nativeSrc": "2086:5:10",
                        "nodeType": "YulTypedName",
                        "src": "2086:5:10",
                        "type": ""
                      }
                    ],
                    "src": "2040:139:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2230:32:10",
                      "nodeType": "YulBlock",
                      "src": "2230:32:10",
                      "statements": [
                        {
                          "nativeSrc": "2240:16:10",
                          "nodeType": "YulAssignment",
                          "src": "2240:16:10",
                          "value": {
                            "name": "value",
                            "nativeSrc": "2251:5:10",
                            "nodeType": "YulIdentifier",
                            "src": "2251:5:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nativeSrc": "2240:7:10",
                              "nodeType": "YulIdentifier",
                              "src": "2240:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint256",
                    "nativeSrc": "2185:77:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "2212:5:10",
                        "nodeType": "YulTypedName",
                        "src": "2212:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nativeSrc": "2222:7:10",
                        "nodeType": "YulTypedName",
                        "src": "2222:7:10",
                        "type": ""
                      }
                    ],
                    "src": "2185:77:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2311:79:10",
                      "nodeType": "YulBlock",
                      "src": "2311:79:10",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "2368:16:10",
                            "nodeType": "YulBlock",
                            "src": "2368:16:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nativeSrc": "2377:1:10",
                                      "nodeType": "YulLiteral",
                                      "src": "2377:1:10",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "2380:1:10",
                                      "nodeType": "YulLiteral",
                                      "src": "2380:1:10",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nativeSrc": "2370:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2370:6:10"
                                  },
                                  "nativeSrc": "2370:12:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2370:12:10"
                                },
                                "nativeSrc": "2370:12:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "2370:12:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "2334:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2334:5:10"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "2359:5:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "2359:5:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nativeSrc": "2341:17:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "2341:17:10"
                                    },
                                    "nativeSrc": "2341:24:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2341:24:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "2331:2:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "2331:2:10"
                                },
                                "nativeSrc": "2331:35:10",
                                "nodeType": "YulFunctionCall",
                                "src": "2331:35:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "2324:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "2324:6:10"
                            },
                            "nativeSrc": "2324:43:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2324:43:10"
                          },
                          "nativeSrc": "2321:63:10",
                          "nodeType": "YulIf",
                          "src": "2321:63:10"
                        }
                      ]
                    },
                    "name": "validator_revert_t_uint256",
                    "nativeSrc": "2268:122:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "2304:5:10",
                        "nodeType": "YulTypedName",
                        "src": "2304:5:10",
                        "type": ""
                      }
                    ],
                    "src": "2268:122:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2448:87:10",
                      "nodeType": "YulBlock",
                      "src": "2448:87:10",
                      "statements": [
                        {
                          "nativeSrc": "2458:29:10",
                          "nodeType": "YulAssignment",
                          "src": "2458:29:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nativeSrc": "2480:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "2480:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nativeSrc": "2467:12:10",
                              "nodeType": "YulIdentifier",
                              "src": "2467:12:10"
                            },
                            "nativeSrc": "2467:20:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2467:20:10"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nativeSrc": "2458:5:10",
                              "nodeType": "YulIdentifier",
                              "src": "2458:5:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "2523:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "2523:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_uint256",
                              "nativeSrc": "2496:26:10",
                              "nodeType": "YulIdentifier",
                              "src": "2496:26:10"
                            },
                            "nativeSrc": "2496:33:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2496:33:10"
                          },
                          "nativeSrc": "2496:33:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "2496:33:10"
                        }
                      ]
                    },
                    "name": "abi_decode_t_uint256",
                    "nativeSrc": "2396:139:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nativeSrc": "2426:6:10",
                        "nodeType": "YulTypedName",
                        "src": "2426:6:10",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nativeSrc": "2434:3:10",
                        "nodeType": "YulTypedName",
                        "src": "2434:3:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nativeSrc": "2442:5:10",
                        "nodeType": "YulTypedName",
                        "src": "2442:5:10",
                        "type": ""
                      }
                    ],
                    "src": "2396:139:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "2624:391:10",
                      "nodeType": "YulBlock",
                      "src": "2624:391:10",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "2670:83:10",
                            "nodeType": "YulBlock",
                            "src": "2670:83:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nativeSrc": "2672:77:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2672:77:10"
                                  },
                                  "nativeSrc": "2672:79:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "2672:79:10"
                                },
                                "nativeSrc": "2672:79:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "2672:79:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "2645:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2645:7:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2654:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2654:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "2641:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "2641:3:10"
                                },
                                "nativeSrc": "2641:23:10",
                                "nodeType": "YulFunctionCall",
                                "src": "2641:23:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "2666:2:10",
                                "nodeType": "YulLiteral",
                                "src": "2666:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "2637:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "2637:3:10"
                            },
                            "nativeSrc": "2637:32:10",
                            "nodeType": "YulFunctionCall",
                            "src": "2637:32:10"
                          },
                          "nativeSrc": "2634:119:10",
                          "nodeType": "YulIf",
                          "src": "2634:119:10"
                        },
                        {
                          "nativeSrc": "2763:117:10",
                          "nodeType": "YulBlock",
                          "src": "2763:117:10",
                          "statements": [
                            {
                              "nativeSrc": "2778:15:10",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2778:15:10",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2792:1:10",
                                "nodeType": "YulLiteral",
                                "src": "2792:1:10",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "2782:6:10",
                                  "nodeType": "YulTypedName",
                                  "src": "2782:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2807:63:10",
                              "nodeType": "YulAssignment",
                              "src": "2807:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2842:9:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "2842:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "2853:6:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "2853:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2838:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "2838:3:10"
                                    },
                                    "nativeSrc": "2838:22:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2838:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "2862:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2862:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nativeSrc": "2817:20:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "2817:20:10"
                                },
                                "nativeSrc": "2817:53:10",
                                "nodeType": "YulFunctionCall",
                                "src": "2817:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2807:6:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "2807:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nativeSrc": "2890:118:10",
                          "nodeType": "YulBlock",
                          "src": "2890:118:10",
                          "statements": [
                            {
                              "nativeSrc": "2905:16:10",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2905:16:10",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2919:2:10",
                                "nodeType": "YulLiteral",
                                "src": "2919:2:10",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "2909:6:10",
                                  "nodeType": "YulTypedName",
                                  "src": "2909:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2935:63:10",
                              "nodeType": "YulAssignment",
                              "src": "2935:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2970:9:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "2970:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "2981:6:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "2981:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2966:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "2966:3:10"
                                    },
                                    "nativeSrc": "2966:22:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2966:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "2990:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "2990:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nativeSrc": "2945:20:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "2945:20:10"
                                },
                                "nativeSrc": "2945:53:10",
                                "nodeType": "YulFunctionCall",
                                "src": "2945:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "2935:6:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "2935:6:10"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_uint256",
                    "nativeSrc": "2541:474:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "2586:9:10",
                        "nodeType": "YulTypedName",
                        "src": "2586:9:10",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "2597:7:10",
                        "nodeType": "YulTypedName",
                        "src": "2597:7:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "2609:6:10",
                        "nodeType": "YulTypedName",
                        "src": "2609:6:10",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "2617:6:10",
                        "nodeType": "YulTypedName",
                        "src": "2617:6:10",
                        "type": ""
                      }
                    ],
                    "src": "2541:474:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3063:48:10",
                      "nodeType": "YulBlock",
                      "src": "3063:48:10",
                      "statements": [
                        {
                          "nativeSrc": "3073:32:10",
                          "nodeType": "YulAssignment",
                          "src": "3073:32:10",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "3098:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3098:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3091:6:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "3091:6:10"
                                },
                                "nativeSrc": "3091:13:10",
                                "nodeType": "YulFunctionCall",
                                "src": "3091:13:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "3084:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "3084:6:10"
                            },
                            "nativeSrc": "3084:21:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3084:21:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nativeSrc": "3073:7:10",
                              "nodeType": "YulIdentifier",
                              "src": "3073:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_bool",
                    "nativeSrc": "3021:90:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "3045:5:10",
                        "nodeType": "YulTypedName",
                        "src": "3045:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nativeSrc": "3055:7:10",
                        "nodeType": "YulTypedName",
                        "src": "3055:7:10",
                        "type": ""
                      }
                    ],
                    "src": "3021:90:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3176:50:10",
                      "nodeType": "YulBlock",
                      "src": "3176:50:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "3193:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "3193:3:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "3213:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3213:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_bool",
                                  "nativeSrc": "3198:14:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "3198:14:10"
                                },
                                "nativeSrc": "3198:21:10",
                                "nodeType": "YulFunctionCall",
                                "src": "3198:21:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "3186:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "3186:6:10"
                            },
                            "nativeSrc": "3186:34:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3186:34:10"
                          },
                          "nativeSrc": "3186:34:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "3186:34:10"
                        }
                      ]
                    },
                    "name": "abi_encode_t_bool_to_t_bool_fromStack",
                    "nativeSrc": "3117:109:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "3164:5:10",
                        "nodeType": "YulTypedName",
                        "src": "3164:5:10",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nativeSrc": "3171:3:10",
                        "nodeType": "YulTypedName",
                        "src": "3171:3:10",
                        "type": ""
                      }
                    ],
                    "src": "3117:109:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3324:118:10",
                      "nodeType": "YulBlock",
                      "src": "3324:118:10",
                      "statements": [
                        {
                          "nativeSrc": "3334:26:10",
                          "nodeType": "YulAssignment",
                          "src": "3334:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "3346:9:10",
                                "nodeType": "YulIdentifier",
                                "src": "3346:9:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "3357:2:10",
                                "nodeType": "YulLiteral",
                                "src": "3357:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "3342:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "3342:3:10"
                            },
                            "nativeSrc": "3342:18:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3342:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "3334:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "3334:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nativeSrc": "3408:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "3408:6:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3421:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3421:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3432:1:10",
                                    "nodeType": "YulLiteral",
                                    "src": "3432:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3417:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "3417:3:10"
                                },
                                "nativeSrc": "3417:17:10",
                                "nodeType": "YulFunctionCall",
                                "src": "3417:17:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_bool_to_t_bool_fromStack",
                              "nativeSrc": "3370:37:10",
                              "nodeType": "YulIdentifier",
                              "src": "3370:37:10"
                            },
                            "nativeSrc": "3370:65:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3370:65:10"
                          },
                          "nativeSrc": "3370:65:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "3370:65:10"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                    "nativeSrc": "3232:210:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3296:9:10",
                        "nodeType": "YulTypedName",
                        "src": "3296:9:10",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "3308:6:10",
                        "nodeType": "YulTypedName",
                        "src": "3308:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "3319:4:10",
                        "nodeType": "YulTypedName",
                        "src": "3319:4:10",
                        "type": ""
                      }
                    ],
                    "src": "3232:210:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3513:53:10",
                      "nodeType": "YulBlock",
                      "src": "3513:53:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "3530:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "3530:3:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "3553:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3553:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nativeSrc": "3535:17:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "3535:17:10"
                                },
                                "nativeSrc": "3535:24:10",
                                "nodeType": "YulFunctionCall",
                                "src": "3535:24:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "3523:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "3523:6:10"
                            },
                            "nativeSrc": "3523:37:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3523:37:10"
                          },
                          "nativeSrc": "3523:37:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "3523:37:10"
                        }
                      ]
                    },
                    "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                    "nativeSrc": "3448:118:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "3501:5:10",
                        "nodeType": "YulTypedName",
                        "src": "3501:5:10",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nativeSrc": "3508:3:10",
                        "nodeType": "YulTypedName",
                        "src": "3508:3:10",
                        "type": ""
                      }
                    ],
                    "src": "3448:118:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3670:124:10",
                      "nodeType": "YulBlock",
                      "src": "3670:124:10",
                      "statements": [
                        {
                          "nativeSrc": "3680:26:10",
                          "nodeType": "YulAssignment",
                          "src": "3680:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "3692:9:10",
                                "nodeType": "YulIdentifier",
                                "src": "3692:9:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "3703:2:10",
                                "nodeType": "YulLiteral",
                                "src": "3703:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "3688:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "3688:3:10"
                            },
                            "nativeSrc": "3688:18:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3688:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "3680:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "3680:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nativeSrc": "3760:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "3760:6:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3773:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3773:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3784:1:10",
                                    "nodeType": "YulLiteral",
                                    "src": "3784:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3769:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "3769:3:10"
                                },
                                "nativeSrc": "3769:17:10",
                                "nodeType": "YulFunctionCall",
                                "src": "3769:17:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nativeSrc": "3716:43:10",
                              "nodeType": "YulIdentifier",
                              "src": "3716:43:10"
                            },
                            "nativeSrc": "3716:71:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3716:71:10"
                          },
                          "nativeSrc": "3716:71:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "3716:71:10"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                    "nativeSrc": "3572:222:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3642:9:10",
                        "nodeType": "YulTypedName",
                        "src": "3642:9:10",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "3654:6:10",
                        "nodeType": "YulTypedName",
                        "src": "3654:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "3665:4:10",
                        "nodeType": "YulTypedName",
                        "src": "3665:4:10",
                        "type": ""
                      }
                    ],
                    "src": "3572:222:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "3900:519:10",
                      "nodeType": "YulBlock",
                      "src": "3900:519:10",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "3946:83:10",
                            "nodeType": "YulBlock",
                            "src": "3946:83:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nativeSrc": "3948:77:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3948:77:10"
                                  },
                                  "nativeSrc": "3948:79:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "3948:79:10"
                                },
                                "nativeSrc": "3948:79:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "3948:79:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "3921:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3921:7:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3930:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "3930:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "3917:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "3917:3:10"
                                },
                                "nativeSrc": "3917:23:10",
                                "nodeType": "YulFunctionCall",
                                "src": "3917:23:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "3942:2:10",
                                "nodeType": "YulLiteral",
                                "src": "3942:2:10",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "3913:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "3913:3:10"
                            },
                            "nativeSrc": "3913:32:10",
                            "nodeType": "YulFunctionCall",
                            "src": "3913:32:10"
                          },
                          "nativeSrc": "3910:119:10",
                          "nodeType": "YulIf",
                          "src": "3910:119:10"
                        },
                        {
                          "nativeSrc": "4039:117:10",
                          "nodeType": "YulBlock",
                          "src": "4039:117:10",
                          "statements": [
                            {
                              "nativeSrc": "4054:15:10",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4054:15:10",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "4068:1:10",
                                "nodeType": "YulLiteral",
                                "src": "4068:1:10",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "4058:6:10",
                                  "nodeType": "YulTypedName",
                                  "src": "4058:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4083:63:10",
                              "nodeType": "YulAssignment",
                              "src": "4083:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4118:9:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "4118:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "4129:6:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "4129:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4114:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "4114:3:10"
                                    },
                                    "nativeSrc": "4114:22:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4114:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "4138:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4138:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nativeSrc": "4093:20:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4093:20:10"
                                },
                                "nativeSrc": "4093:53:10",
                                "nodeType": "YulFunctionCall",
                                "src": "4093:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "4083:6:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4083:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nativeSrc": "4166:118:10",
                          "nodeType": "YulBlock",
                          "src": "4166:118:10",
                          "statements": [
                            {
                              "nativeSrc": "4181:16:10",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4181:16:10",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "4195:2:10",
                                "nodeType": "YulLiteral",
                                "src": "4195:2:10",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "4185:6:10",
                                  "nodeType": "YulTypedName",
                                  "src": "4185:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4211:63:10",
                              "nodeType": "YulAssignment",
                              "src": "4211:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4246:9:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "4246:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "4257:6:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "4257:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4242:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "4242:3:10"
                                    },
                                    "nativeSrc": "4242:22:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4242:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "4266:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4266:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nativeSrc": "4221:20:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4221:20:10"
                                },
                                "nativeSrc": "4221:53:10",
                                "nodeType": "YulFunctionCall",
                                "src": "4221:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "4211:6:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4211:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nativeSrc": "4294:118:10",
                          "nodeType": "YulBlock",
                          "src": "4294:118:10",
                          "statements": [
                            {
                              "nativeSrc": "4309:16:10",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4309:16:10",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "4323:2:10",
                                "nodeType": "YulLiteral",
                                "src": "4323:2:10",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "4313:6:10",
                                  "nodeType": "YulTypedName",
                                  "src": "4313:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4339:63:10",
                              "nodeType": "YulAssignment",
                              "src": "4339:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4374:9:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "4374:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "4385:6:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "4385:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4370:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "4370:3:10"
                                    },
                                    "nativeSrc": "4370:22:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4370:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "4394:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4394:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nativeSrc": "4349:20:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4349:20:10"
                                },
                                "nativeSrc": "4349:53:10",
                                "nodeType": "YulFunctionCall",
                                "src": "4349:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "4339:6:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4339:6:10"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                    "nativeSrc": "3800:619:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3854:9:10",
                        "nodeType": "YulTypedName",
                        "src": "3854:9:10",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "3865:7:10",
                        "nodeType": "YulTypedName",
                        "src": "3865:7:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "3877:6:10",
                        "nodeType": "YulTypedName",
                        "src": "3877:6:10",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "3885:6:10",
                        "nodeType": "YulTypedName",
                        "src": "3885:6:10",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "3893:6:10",
                        "nodeType": "YulTypedName",
                        "src": "3893:6:10",
                        "type": ""
                      }
                    ],
                    "src": "3800:619:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "4468:43:10",
                      "nodeType": "YulBlock",
                      "src": "4468:43:10",
                      "statements": [
                        {
                          "nativeSrc": "4478:27:10",
                          "nodeType": "YulAssignment",
                          "src": "4478:27:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "4493:5:10",
                                "nodeType": "YulIdentifier",
                                "src": "4493:5:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "4500:4:10",
                                "nodeType": "YulLiteral",
                                "src": "4500:4:10",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "4489:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "4489:3:10"
                            },
                            "nativeSrc": "4489:16:10",
                            "nodeType": "YulFunctionCall",
                            "src": "4489:16:10"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nativeSrc": "4478:7:10",
                              "nodeType": "YulIdentifier",
                              "src": "4478:7:10"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint8",
                    "nativeSrc": "4425:86:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "4450:5:10",
                        "nodeType": "YulTypedName",
                        "src": "4450:5:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nativeSrc": "4460:7:10",
                        "nodeType": "YulTypedName",
                        "src": "4460:7:10",
                        "type": ""
                      }
                    ],
                    "src": "4425:86:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "4578:51:10",
                      "nodeType": "YulBlock",
                      "src": "4578:51:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "4595:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "4595:3:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "4616:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4616:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint8",
                                  "nativeSrc": "4600:15:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4600:15:10"
                                },
                                "nativeSrc": "4600:22:10",
                                "nodeType": "YulFunctionCall",
                                "src": "4600:22:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "4588:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "4588:6:10"
                            },
                            "nativeSrc": "4588:35:10",
                            "nodeType": "YulFunctionCall",
                            "src": "4588:35:10"
                          },
                          "nativeSrc": "4588:35:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "4588:35:10"
                        }
                      ]
                    },
                    "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                    "nativeSrc": "4517:112:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "4566:5:10",
                        "nodeType": "YulTypedName",
                        "src": "4566:5:10",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nativeSrc": "4573:3:10",
                        "nodeType": "YulTypedName",
                        "src": "4573:3:10",
                        "type": ""
                      }
                    ],
                    "src": "4517:112:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "4729:120:10",
                      "nodeType": "YulBlock",
                      "src": "4729:120:10",
                      "statements": [
                        {
                          "nativeSrc": "4739:26:10",
                          "nodeType": "YulAssignment",
                          "src": "4739:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "4751:9:10",
                                "nodeType": "YulIdentifier",
                                "src": "4751:9:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "4762:2:10",
                                "nodeType": "YulLiteral",
                                "src": "4762:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "4747:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "4747:3:10"
                            },
                            "nativeSrc": "4747:18:10",
                            "nodeType": "YulFunctionCall",
                            "src": "4747:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "4739:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "4739:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nativeSrc": "4815:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "4815:6:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4828:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4828:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4839:1:10",
                                    "nodeType": "YulLiteral",
                                    "src": "4839:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4824:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4824:3:10"
                                },
                                "nativeSrc": "4824:17:10",
                                "nodeType": "YulFunctionCall",
                                "src": "4824:17:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                              "nativeSrc": "4775:39:10",
                              "nodeType": "YulIdentifier",
                              "src": "4775:39:10"
                            },
                            "nativeSrc": "4775:67:10",
                            "nodeType": "YulFunctionCall",
                            "src": "4775:67:10"
                          },
                          "nativeSrc": "4775:67:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "4775:67:10"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                    "nativeSrc": "4635:214:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "4701:9:10",
                        "nodeType": "YulTypedName",
                        "src": "4701:9:10",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "4713:6:10",
                        "nodeType": "YulTypedName",
                        "src": "4713:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "4724:4:10",
                        "nodeType": "YulTypedName",
                        "src": "4724:4:10",
                        "type": ""
                      }
                    ],
                    "src": "4635:214:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "4921:263:10",
                      "nodeType": "YulBlock",
                      "src": "4921:263:10",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "4967:83:10",
                            "nodeType": "YulBlock",
                            "src": "4967:83:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nativeSrc": "4969:77:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4969:77:10"
                                  },
                                  "nativeSrc": "4969:79:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4969:79:10"
                                },
                                "nativeSrc": "4969:79:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "4969:79:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "4942:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4942:7:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4951:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "4951:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "4938:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "4938:3:10"
                                },
                                "nativeSrc": "4938:23:10",
                                "nodeType": "YulFunctionCall",
                                "src": "4938:23:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "4963:2:10",
                                "nodeType": "YulLiteral",
                                "src": "4963:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "4934:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "4934:3:10"
                            },
                            "nativeSrc": "4934:32:10",
                            "nodeType": "YulFunctionCall",
                            "src": "4934:32:10"
                          },
                          "nativeSrc": "4931:119:10",
                          "nodeType": "YulIf",
                          "src": "4931:119:10"
                        },
                        {
                          "nativeSrc": "5060:117:10",
                          "nodeType": "YulBlock",
                          "src": "5060:117:10",
                          "statements": [
                            {
                              "nativeSrc": "5075:15:10",
                              "nodeType": "YulVariableDeclaration",
                              "src": "5075:15:10",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "5089:1:10",
                                "nodeType": "YulLiteral",
                                "src": "5089:1:10",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "5079:6:10",
                                  "nodeType": "YulTypedName",
                                  "src": "5079:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "5104:63:10",
                              "nodeType": "YulAssignment",
                              "src": "5104:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5139:9:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "5139:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "5150:6:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "5150:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5135:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "5135:3:10"
                                    },
                                    "nativeSrc": "5135:22:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5135:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "5159:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5159:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nativeSrc": "5114:20:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5114:20:10"
                                },
                                "nativeSrc": "5114:53:10",
                                "nodeType": "YulFunctionCall",
                                "src": "5114:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "5104:6:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5104:6:10"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address",
                    "nativeSrc": "4855:329:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "4891:9:10",
                        "nodeType": "YulTypedName",
                        "src": "4891:9:10",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "4902:7:10",
                        "nodeType": "YulTypedName",
                        "src": "4902:7:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "4914:6:10",
                        "nodeType": "YulTypedName",
                        "src": "4914:6:10",
                        "type": ""
                      }
                    ],
                    "src": "4855:329:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "5255:53:10",
                      "nodeType": "YulBlock",
                      "src": "5255:53:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nativeSrc": "5272:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "5272:3:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "5295:5:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5295:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nativeSrc": "5277:17:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5277:17:10"
                                },
                                "nativeSrc": "5277:24:10",
                                "nodeType": "YulFunctionCall",
                                "src": "5277:24:10"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "5265:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "5265:6:10"
                            },
                            "nativeSrc": "5265:37:10",
                            "nodeType": "YulFunctionCall",
                            "src": "5265:37:10"
                          },
                          "nativeSrc": "5265:37:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "5265:37:10"
                        }
                      ]
                    },
                    "name": "abi_encode_t_address_to_t_address_fromStack",
                    "nativeSrc": "5190:118:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nativeSrc": "5243:5:10",
                        "nodeType": "YulTypedName",
                        "src": "5243:5:10",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nativeSrc": "5250:3:10",
                        "nodeType": "YulTypedName",
                        "src": "5250:3:10",
                        "type": ""
                      }
                    ],
                    "src": "5190:118:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "5412:124:10",
                      "nodeType": "YulBlock",
                      "src": "5412:124:10",
                      "statements": [
                        {
                          "nativeSrc": "5422:26:10",
                          "nodeType": "YulAssignment",
                          "src": "5422:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "5434:9:10",
                                "nodeType": "YulIdentifier",
                                "src": "5434:9:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "5445:2:10",
                                "nodeType": "YulLiteral",
                                "src": "5445:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "5430:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "5430:3:10"
                            },
                            "nativeSrc": "5430:18:10",
                            "nodeType": "YulFunctionCall",
                            "src": "5430:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "5422:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "5422:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nativeSrc": "5502:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "5502:6:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5515:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5515:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5526:1:10",
                                    "nodeType": "YulLiteral",
                                    "src": "5526:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5511:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5511:3:10"
                                },
                                "nativeSrc": "5511:17:10",
                                "nodeType": "YulFunctionCall",
                                "src": "5511:17:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nativeSrc": "5458:43:10",
                              "nodeType": "YulIdentifier",
                              "src": "5458:43:10"
                            },
                            "nativeSrc": "5458:71:10",
                            "nodeType": "YulFunctionCall",
                            "src": "5458:71:10"
                          },
                          "nativeSrc": "5458:71:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "5458:71:10"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nativeSrc": "5314:222:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "5384:9:10",
                        "nodeType": "YulTypedName",
                        "src": "5384:9:10",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "5396:6:10",
                        "nodeType": "YulTypedName",
                        "src": "5396:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "5407:4:10",
                        "nodeType": "YulTypedName",
                        "src": "5407:4:10",
                        "type": ""
                      }
                    ],
                    "src": "5314:222:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "5625:391:10",
                      "nodeType": "YulBlock",
                      "src": "5625:391:10",
                      "statements": [
                        {
                          "body": {
                            "nativeSrc": "5671:83:10",
                            "nodeType": "YulBlock",
                            "src": "5671:83:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nativeSrc": "5673:77:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5673:77:10"
                                  },
                                  "nativeSrc": "5673:79:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "5673:79:10"
                                },
                                "nativeSrc": "5673:79:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "5673:79:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "5646:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5646:7:10"
                                  },
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5655:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5655:9:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "5642:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5642:3:10"
                                },
                                "nativeSrc": "5642:23:10",
                                "nodeType": "YulFunctionCall",
                                "src": "5642:23:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "5667:2:10",
                                "nodeType": "YulLiteral",
                                "src": "5667:2:10",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nativeSrc": "5638:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "5638:3:10"
                            },
                            "nativeSrc": "5638:32:10",
                            "nodeType": "YulFunctionCall",
                            "src": "5638:32:10"
                          },
                          "nativeSrc": "5635:119:10",
                          "nodeType": "YulIf",
                          "src": "5635:119:10"
                        },
                        {
                          "nativeSrc": "5764:117:10",
                          "nodeType": "YulBlock",
                          "src": "5764:117:10",
                          "statements": [
                            {
                              "nativeSrc": "5779:15:10",
                              "nodeType": "YulVariableDeclaration",
                              "src": "5779:15:10",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "5793:1:10",
                                "nodeType": "YulLiteral",
                                "src": "5793:1:10",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "5783:6:10",
                                  "nodeType": "YulTypedName",
                                  "src": "5783:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "5808:63:10",
                              "nodeType": "YulAssignment",
                              "src": "5808:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5843:9:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "5843:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "5854:6:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "5854:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5839:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "5839:3:10"
                                    },
                                    "nativeSrc": "5839:22:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5839:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "5863:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5863:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nativeSrc": "5818:20:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5818:20:10"
                                },
                                "nativeSrc": "5818:53:10",
                                "nodeType": "YulFunctionCall",
                                "src": "5818:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "5808:6:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5808:6:10"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nativeSrc": "5891:118:10",
                          "nodeType": "YulBlock",
                          "src": "5891:118:10",
                          "statements": [
                            {
                              "nativeSrc": "5906:16:10",
                              "nodeType": "YulVariableDeclaration",
                              "src": "5906:16:10",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "5920:2:10",
                                "nodeType": "YulLiteral",
                                "src": "5920:2:10",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "5910:6:10",
                                  "nodeType": "YulTypedName",
                                  "src": "5910:6:10",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "5936:63:10",
                              "nodeType": "YulAssignment",
                              "src": "5936:63:10",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5971:9:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "5971:9:10"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "5982:6:10",
                                        "nodeType": "YulIdentifier",
                                        "src": "5982:6:10"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5967:3:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "5967:3:10"
                                    },
                                    "nativeSrc": "5967:22:10",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5967:22:10"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "5991:7:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "5991:7:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nativeSrc": "5946:20:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5946:20:10"
                                },
                                "nativeSrc": "5946:53:10",
                                "nodeType": "YulFunctionCall",
                                "src": "5946:53:10"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "5936:6:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5936:6:10"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_address",
                    "nativeSrc": "5542:474:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "5587:9:10",
                        "nodeType": "YulTypedName",
                        "src": "5587:9:10",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "5598:7:10",
                        "nodeType": "YulTypedName",
                        "src": "5598:7:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nativeSrc": "5610:6:10",
                        "nodeType": "YulTypedName",
                        "src": "5610:6:10",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "5618:6:10",
                        "nodeType": "YulTypedName",
                        "src": "5618:6:10",
                        "type": ""
                      }
                    ],
                    "src": "5542:474:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "6050:152:10",
                      "nodeType": "YulBlock",
                      "src": "6050:152:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "6067:1:10",
                                "nodeType": "YulLiteral",
                                "src": "6067:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "6070:77:10",
                                "nodeType": "YulLiteral",
                                "src": "6070:77:10",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "6060:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "6060:6:10"
                            },
                            "nativeSrc": "6060:88:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6060:88:10"
                          },
                          "nativeSrc": "6060:88:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "6060:88:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "6164:1:10",
                                "nodeType": "YulLiteral",
                                "src": "6164:1:10",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "6167:4:10",
                                "nodeType": "YulLiteral",
                                "src": "6167:4:10",
                                "type": "",
                                "value": "0x22"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "6157:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "6157:6:10"
                            },
                            "nativeSrc": "6157:15:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6157:15:10"
                          },
                          "nativeSrc": "6157:15:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "6157:15:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "6188:1:10",
                                "nodeType": "YulLiteral",
                                "src": "6188:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "6191:4:10",
                                "nodeType": "YulLiteral",
                                "src": "6191:4:10",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nativeSrc": "6181:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "6181:6:10"
                            },
                            "nativeSrc": "6181:15:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6181:15:10"
                          },
                          "nativeSrc": "6181:15:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "6181:15:10"
                        }
                      ]
                    },
                    "name": "panic_error_0x22",
                    "nativeSrc": "6022:180:10",
                    "nodeType": "YulFunctionDefinition",
                    "src": "6022:180:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "6259:269:10",
                      "nodeType": "YulBlock",
                      "src": "6259:269:10",
                      "statements": [
                        {
                          "nativeSrc": "6269:22:10",
                          "nodeType": "YulAssignment",
                          "src": "6269:22:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nativeSrc": "6283:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "6283:4:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "6289:1:10",
                                "nodeType": "YulLiteral",
                                "src": "6289:1:10",
                                "type": "",
                                "value": "2"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nativeSrc": "6279:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "6279:3:10"
                            },
                            "nativeSrc": "6279:12:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6279:12:10"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nativeSrc": "6269:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "6269:6:10"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "6300:38:10",
                          "nodeType": "YulVariableDeclaration",
                          "src": "6300:38:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nativeSrc": "6330:4:10",
                                "nodeType": "YulIdentifier",
                                "src": "6330:4:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "6336:1:10",
                                "nodeType": "YulLiteral",
                                "src": "6336:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "6326:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "6326:3:10"
                            },
                            "nativeSrc": "6326:12:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6326:12:10"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nativeSrc": "6304:18:10",
                              "nodeType": "YulTypedName",
                              "src": "6304:18:10",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "6377:51:10",
                            "nodeType": "YulBlock",
                            "src": "6377:51:10",
                            "statements": [
                              {
                                "nativeSrc": "6391:27:10",
                                "nodeType": "YulAssignment",
                                "src": "6391:27:10",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nativeSrc": "6405:6:10",
                                      "nodeType": "YulIdentifier",
                                      "src": "6405:6:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "6413:4:10",
                                      "nodeType": "YulLiteral",
                                      "src": "6413:4:10",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nativeSrc": "6401:3:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "6401:3:10"
                                  },
                                  "nativeSrc": "6401:17:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6401:17:10"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "6391:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "6391:6:10"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nativeSrc": "6357:18:10",
                                "nodeType": "YulIdentifier",
                                "src": "6357:18:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "6350:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "6350:6:10"
                            },
                            "nativeSrc": "6350:26:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6350:26:10"
                          },
                          "nativeSrc": "6347:81:10",
                          "nodeType": "YulIf",
                          "src": "6347:81:10"
                        },
                        {
                          "body": {
                            "nativeSrc": "6480:42:10",
                            "nodeType": "YulBlock",
                            "src": "6480:42:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x22",
                                    "nativeSrc": "6494:16:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "6494:16:10"
                                  },
                                  "nativeSrc": "6494:18:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "6494:18:10"
                                },
                                "nativeSrc": "6494:18:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "6494:18:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nativeSrc": "6444:18:10",
                                "nodeType": "YulIdentifier",
                                "src": "6444:18:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "6467:6:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "6467:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6475:2:10",
                                    "nodeType": "YulLiteral",
                                    "src": "6475:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "6464:2:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "6464:2:10"
                                },
                                "nativeSrc": "6464:14:10",
                                "nodeType": "YulFunctionCall",
                                "src": "6464:14:10"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nativeSrc": "6441:2:10",
                              "nodeType": "YulIdentifier",
                              "src": "6441:2:10"
                            },
                            "nativeSrc": "6441:38:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6441:38:10"
                          },
                          "nativeSrc": "6438:84:10",
                          "nodeType": "YulIf",
                          "src": "6438:84:10"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nativeSrc": "6208:320:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nativeSrc": "6243:4:10",
                        "nodeType": "YulTypedName",
                        "src": "6243:4:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nativeSrc": "6252:6:10",
                        "nodeType": "YulTypedName",
                        "src": "6252:6:10",
                        "type": ""
                      }
                    ],
                    "src": "6208:320:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "6688:288:10",
                      "nodeType": "YulBlock",
                      "src": "6688:288:10",
                      "statements": [
                        {
                          "nativeSrc": "6698:26:10",
                          "nodeType": "YulAssignment",
                          "src": "6698:26:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nativeSrc": "6710:9:10",
                                "nodeType": "YulIdentifier",
                                "src": "6710:9:10"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "6721:2:10",
                                "nodeType": "YulLiteral",
                                "src": "6721:2:10",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "6706:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "6706:3:10"
                            },
                            "nativeSrc": "6706:18:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6706:18:10"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nativeSrc": "6698:4:10",
                              "nodeType": "YulIdentifier",
                              "src": "6698:4:10"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nativeSrc": "6778:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "6778:6:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6791:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "6791:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6802:1:10",
                                    "nodeType": "YulLiteral",
                                    "src": "6802:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6787:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "6787:3:10"
                                },
                                "nativeSrc": "6787:17:10",
                                "nodeType": "YulFunctionCall",
                                "src": "6787:17:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nativeSrc": "6734:43:10",
                              "nodeType": "YulIdentifier",
                              "src": "6734:43:10"
                            },
                            "nativeSrc": "6734:71:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6734:71:10"
                          },
                          "nativeSrc": "6734:71:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "6734:71:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nativeSrc": "6859:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "6859:6:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6872:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "6872:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6883:2:10",
                                    "nodeType": "YulLiteral",
                                    "src": "6883:2:10",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6868:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "6868:3:10"
                                },
                                "nativeSrc": "6868:18:10",
                                "nodeType": "YulFunctionCall",
                                "src": "6868:18:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nativeSrc": "6815:43:10",
                              "nodeType": "YulIdentifier",
                              "src": "6815:43:10"
                            },
                            "nativeSrc": "6815:72:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6815:72:10"
                          },
                          "nativeSrc": "6815:72:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "6815:72:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nativeSrc": "6941:6:10",
                                "nodeType": "YulIdentifier",
                                "src": "6941:6:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "6954:9:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "6954:9:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6965:2:10",
                                    "nodeType": "YulLiteral",
                                    "src": "6965:2:10",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6950:3:10",
                                  "nodeType": "YulIdentifier",
                                  "src": "6950:3:10"
                                },
                                "nativeSrc": "6950:18:10",
                                "nodeType": "YulFunctionCall",
                                "src": "6950:18:10"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nativeSrc": "6897:43:10",
                              "nodeType": "YulIdentifier",
                              "src": "6897:43:10"
                            },
                            "nativeSrc": "6897:72:10",
                            "nodeType": "YulFunctionCall",
                            "src": "6897:72:10"
                          },
                          "nativeSrc": "6897:72:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "6897:72:10"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                    "nativeSrc": "6534:442:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nativeSrc": "6644:9:10",
                        "nodeType": "YulTypedName",
                        "src": "6644:9:10",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "6656:6:10",
                        "nodeType": "YulTypedName",
                        "src": "6656:6:10",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "6664:6:10",
                        "nodeType": "YulTypedName",
                        "src": "6664:6:10",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nativeSrc": "6672:6:10",
                        "nodeType": "YulTypedName",
                        "src": "6672:6:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nativeSrc": "6683:4:10",
                        "nodeType": "YulTypedName",
                        "src": "6683:4:10",
                        "type": ""
                      }
                    ],
                    "src": "6534:442:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "7010:152:10",
                      "nodeType": "YulBlock",
                      "src": "7010:152:10",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "7027:1:10",
                                "nodeType": "YulLiteral",
                                "src": "7027:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "7030:77:10",
                                "nodeType": "YulLiteral",
                                "src": "7030:77:10",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "7020:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "7020:6:10"
                            },
                            "nativeSrc": "7020:88:10",
                            "nodeType": "YulFunctionCall",
                            "src": "7020:88:10"
                          },
                          "nativeSrc": "7020:88:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "7020:88:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "7124:1:10",
                                "nodeType": "YulLiteral",
                                "src": "7124:1:10",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "7127:4:10",
                                "nodeType": "YulLiteral",
                                "src": "7127:4:10",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nativeSrc": "7117:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "7117:6:10"
                            },
                            "nativeSrc": "7117:15:10",
                            "nodeType": "YulFunctionCall",
                            "src": "7117:15:10"
                          },
                          "nativeSrc": "7117:15:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "7117:15:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "7148:1:10",
                                "nodeType": "YulLiteral",
                                "src": "7148:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "7151:4:10",
                                "nodeType": "YulLiteral",
                                "src": "7151:4:10",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nativeSrc": "7141:6:10",
                              "nodeType": "YulIdentifier",
                              "src": "7141:6:10"
                            },
                            "nativeSrc": "7141:15:10",
                            "nodeType": "YulFunctionCall",
                            "src": "7141:15:10"
                          },
                          "nativeSrc": "7141:15:10",
                          "nodeType": "YulExpressionStatement",
                          "src": "7141:15:10"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nativeSrc": "6982:180:10",
                    "nodeType": "YulFunctionDefinition",
                    "src": "6982:180:10"
                  },
                  {
                    "body": {
                      "nativeSrc": "7212:147:10",
                      "nodeType": "YulBlock",
                      "src": "7212:147:10",
                      "statements": [
                        {
                          "nativeSrc": "7222:25:10",
                          "nodeType": "YulAssignment",
                          "src": "7222:25:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nativeSrc": "7245:1:10",
                                "nodeType": "YulIdentifier",
                                "src": "7245:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nativeSrc": "7227:17:10",
                              "nodeType": "YulIdentifier",
                              "src": "7227:17:10"
                            },
                            "nativeSrc": "7227:20:10",
                            "nodeType": "YulFunctionCall",
                            "src": "7227:20:10"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nativeSrc": "7222:1:10",
                              "nodeType": "YulIdentifier",
                              "src": "7222:1:10"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "7256:25:10",
                          "nodeType": "YulAssignment",
                          "src": "7256:25:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nativeSrc": "7279:1:10",
                                "nodeType": "YulIdentifier",
                                "src": "7279:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nativeSrc": "7261:17:10",
                              "nodeType": "YulIdentifier",
                              "src": "7261:17:10"
                            },
                            "nativeSrc": "7261:20:10",
                            "nodeType": "YulFunctionCall",
                            "src": "7261:20:10"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nativeSrc": "7256:1:10",
                              "nodeType": "YulIdentifier",
                              "src": "7256:1:10"
                            }
                          ]
                        },
                        {
                          "nativeSrc": "7290:16:10",
                          "nodeType": "YulAssignment",
                          "src": "7290:16:10",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nativeSrc": "7301:1:10",
                                "nodeType": "YulIdentifier",
                                "src": "7301:1:10"
                              },
                              {
                                "name": "y",
                                "nativeSrc": "7304:1:10",
                                "nodeType": "YulIdentifier",
                                "src": "7304:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "7297:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "7297:3:10"
                            },
                            "nativeSrc": "7297:9:10",
                            "nodeType": "YulFunctionCall",
                            "src": "7297:9:10"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nativeSrc": "7290:3:10",
                              "nodeType": "YulIdentifier",
                              "src": "7290:3:10"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nativeSrc": "7330:22:10",
                            "nodeType": "YulBlock",
                            "src": "7330:22:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nativeSrc": "7332:16:10",
                                    "nodeType": "YulIdentifier",
                                    "src": "7332:16:10"
                                  },
                                  "nativeSrc": "7332:18:10",
                                  "nodeType": "YulFunctionCall",
                                  "src": "7332:18:10"
                                },
                                "nativeSrc": "7332:18:10",
                                "nodeType": "YulExpressionStatement",
                                "src": "7332:18:10"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nativeSrc": "7322:1:10",
                                "nodeType": "YulIdentifier",
                                "src": "7322:1:10"
                              },
                              {
                                "name": "sum",
                                "nativeSrc": "7325:3:10",
                                "nodeType": "YulIdentifier",
                                "src": "7325:3:10"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nativeSrc": "7319:2:10",
                              "nodeType": "YulIdentifier",
                              "src": "7319:2:10"
                            },
                            "nativeSrc": "7319:10:10",
                            "nodeType": "YulFunctionCall",
                            "src": "7319:10:10"
                          },
                          "nativeSrc": "7316:36:10",
                          "nodeType": "YulIf",
                          "src": "7316:36:10"
                        }
                      ]
                    },
                    "name": "checked_add_t_uint256",
                    "nativeSrc": "7168:191:10",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nativeSrc": "7199:1:10",
                        "nodeType": "YulTypedName",
                        "src": "7199:1:10",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nativeSrc": "7202:1:10",
                        "nodeType": "YulTypedName",
                        "src": "7202:1:10",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nativeSrc": "7208:3:10",
                        "nodeType": "YulTypedName",
                        "src": "7208:3:10",
                        "type": ""
                      }
                    ],
                    "src": "7168:191:10"
                  }
                ]
              },
              "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
              "id": 10,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "immutableReferences": {},
          "linkReferences": {},
          "object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610dee565b60405180910390f35b61010c60048036038101906101079190610ea9565b61032e565b6040516101199190610f04565b60405180910390f35b61012a610351565b6040516101379190610f2e565b60405180910390f35b61015a60048036038101906101559190610f49565b61035b565b6040516101679190610f04565b60405180910390f35b61017861038a565b6040516101859190610fb8565b60405180910390f35b6101a860048036038101906101a39190610ea9565b610393565b005b6101c460048036038101906101bf9190610fd3565b6103a9565b6040516101d19190610f2e565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f9919061100f565b60405180910390f35b61020a61042f565b6040516102179190610dee565b60405180910390f35b61023a60048036038101906102359190610ea9565b6104c1565b6040516102479190610f04565b60405180910390f35b61026a6004803603810190610265919061102a565b6104e4565b6040516102779190610f2e565b60405180910390f35b61029a60048036038101906102959190610fd3565b61056b565b005b6060600380546102ab90611099565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790611099565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e85858561069f565b60019150509392505050565b60006012905090565b61039b610793565b6103a5828261081a565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610793565b610403600061089c565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e90611099565b80601f016020809104026020016040519081016040528092919081815260200182805461046a90611099565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d981858561069f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610793565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc919061100f565b60405180910390fd5b6105ee8161089c565b50565b600033905090565b6106068383836001610962565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106995781811015610689578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610680939291906110ca565b60405180910390fd5b61069884848484036000610962565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107115760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610708919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107835760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077a919061100f565b60405180910390fd5b61078e838383610b39565b505050565b61079b6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107b9610405565b73ffffffffffffffffffffffffffffffffffffffff1614610818576107dc6105f1565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161080f919061100f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610883919061100f565b60405180910390fd5b61089860008383610b39565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d45760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cb919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a465760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3d919061100f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b33578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2a9190610f2e565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8b578060026000828254610b7f9190611130565b92505081905550610c5e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0e939291906110ca565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca75780600260008282540392505081905550610cf4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d519190610f2e565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d98578082015181840152602081019050610d7d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc082610d5e565b610dca8185610d69565b9350610dda818560208601610d7a565b610de381610da4565b840191505092915050565b60006020820190508181036000830152610e088184610db5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4082610e15565b9050919050565b610e5081610e35565b8114610e5b57600080fd5b50565b600081359050610e6d81610e47565b92915050565b6000819050919050565b610e8681610e73565b8114610e9157600080fd5b50565b600081359050610ea381610e7d565b92915050565b60008060408385031215610ec057610ebf610e10565b5b6000610ece85828601610e5e565b9250506020610edf85828601610e94565b9150509250929050565b60008115159050919050565b610efe81610ee9565b82525050565b6000602082019050610f196000830184610ef5565b92915050565b610f2881610e73565b82525050565b6000602082019050610f436000830184610f1f565b92915050565b600080600060608486031215610f6257610f61610e10565b5b6000610f7086828701610e5e565b9350506020610f8186828701610e5e565b9250506040610f9286828701610e94565b9150509250925092565b600060ff82169050919050565b610fb281610f9c565b82525050565b6000602082019050610fcd6000830184610fa9565b92915050565b600060208284031215610fe957610fe8610e10565b5b6000610ff784828501610e5e565b91505092915050565b61100981610e35565b82525050565b60006020820190506110246000830184611000565b92915050565b6000806040838503121561104157611040610e10565b5b600061104f85828601610e5e565b925050602061106085828601610e5e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b157607f821691505b6020821081036110c4576110c361106a565b5b50919050565b60006060820190506110df6000830186611000565b6110ec6020830185610f1f565b6110f96040830184610f1f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113b82610e73565b915061114683610e73565b925082820190508082111561115e5761115d611101565b5b9291505056fea2646970667358221220404018bc6ad07b93e6c7d5202a4df04bbdf224aa0770c9cdae9758c1d874bb5364736f6c634300081a0033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x793 JUMP JUMPDEST PUSH2 0x3A5 DUP3 DUP3 PUSH2 0x81A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x0 PUSH2 0x89C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4CC PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP2 DUP6 DUP6 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x89C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x962 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x699 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x689 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x680 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x698 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x962 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x711 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x783 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78E DUP4 DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x79B PUSH2 0x5F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B9 PUSH2 0x405 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x818 JUMPI PUSH2 0x7DC PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x898 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA46 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB33 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB2A SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0x1130 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC17 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCF4 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC0 DUP3 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0xDCA DUP2 DUP6 PUSH2 0xD69 JUMP JUMPDEST SWAP4 POP PUSH2 0xDDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD7A JUMP JUMPDEST PUSH2 0xDE3 DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE08 DUP2 DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE40 DUP3 PUSH2 0xE15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xE35 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6D DUP2 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE86 DUP2 PUSH2 0xE73 JUMP JUMPDEST DUP2 EQ PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA3 DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC0 JUMPI PUSH2 0xEBF PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEDF DUP6 DUP3 DUP7 ADD PUSH2 0xE94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFE DUP2 PUSH2 0xEE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF28 DUP2 PUSH2 0xE73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF62 JUMPI PUSH2 0xF61 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF70 DUP7 DUP3 DUP8 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF81 DUP7 DUP3 DUP8 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF92 DUP7 DUP3 DUP8 ADD PUSH2 0xE94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB2 DUP2 PUSH2 0xF9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE9 JUMPI PUSH2 0xFE8 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF7 DUP5 DUP3 DUP6 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1009 DUP2 PUSH2 0xE35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1024 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1000 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1041 JUMPI PUSH2 0x1040 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104F DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1060 DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C4 JUMPI PUSH2 0x10C3 PUSH2 0x106A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10DF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x10EC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF1F JUMP JUMPDEST PUSH2 0x10F9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113B DUP3 PUSH2 0xE73 JUMP JUMPDEST SWAP2 POP PUSH2 0x1146 DUP4 PUSH2 0xE73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x115E JUMPI PUSH2 0x115D PUSH2 0x1101 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH BLOCKHASH XOR 0xBC PUSH11 0xD07B93E6C7D5202A4DF04B 0xBD CALLCODE 0x24 0xAA SMOD PUSH17 0xC9CDAE9758C1D874BB5364736F6C634300 ADDMOD BYTE STOP CALLER ",
          "sourceMap": "168:219:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;292:93:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;292:93:8:-;1531:13:0;:11;:13::i;:::-;361:17:8::1;367:2;371:6;361:5;:17::i;:::-;292:93:::0;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:118::-;5277:24;5295:5;5277:24;:::i;:::-;5272:3;5265:37;5190:118;;:::o;5314:222::-;5407:4;5445:2;5434:9;5430:18;5422:26;;5458:71;5526:1;5515:9;5511:17;5502:6;5458:71;:::i;:::-;5314:222;;;;:::o;5542:474::-;5610:6;5618;5667:2;5655:9;5646:7;5642:23;5638:32;5635:119;;;5673:79;;:::i;:::-;5635:119;5793:1;5818:53;5863:7;5854:6;5843:9;5839:22;5818:53;:::i;:::-;5808:63;;5764:117;5920:2;5946:53;5991:7;5982:6;5971:9;5967:22;5946:53;:::i;:::-;5936:63;;5891:118;5542:474;;;;;:::o;6022:180::-;6070:77;6067:1;6060:88;6167:4;6164:1;6157:15;6191:4;6188:1;6181:15;6208:320;6252:6;6289:1;6283:4;6279:12;6269:22;;6336:1;6330:4;6326:12;6357:18;6347:81;;6413:4;6405:6;6401:17;6391:27;;6347:81;6475:2;6467:6;6464:14;6444:18;6441:38;6438:84;;6494:18;;:::i;:::-;6438:84;6259:269;6208:320;;;:::o;6534:442::-;6683:4;6721:2;6710:9;6706:18;6698:26;;6734:71;6802:1;6791:9;6787:17;6778:6;6734:71;:::i;:::-;6815:72;6883:2;6872:9;6868:18;6859:6;6815:72;:::i;:::-;6897;6965:2;6954:9;6950:18;6941:6;6897:72;:::i;:::-;6534:442;;;;;;:::o;6982:180::-;7030:77;7027:1;7020:88;7127:4;7124:1;7117:15;7151:4;7148:1;7141:15;7168:191;7208:3;7227:20;7245:1;7227:20;:::i;:::-;7222:25;;7261:20;7279:1;7261:20;:::i;:::-;7256:25;;7304:1;7301;7297:9;7290:16;;7325:3;7322:1;7319:10;7316:36;;;7332:18;;:::i;:::-;7316:36;7168:191;;;;:::o"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "901200",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "2864",
            "decimals()": "432",
            "mint(address,uint256)": "infinite",
            "name()": "infinite",
            "owner()": "2589",
            "renounceOwnership()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2482",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "infinite"
          }
        },
        "methodIdentifiers": {
          "allowance(address,address)": "dd62ed3e",
          "approve(address,uint256)": "095ea7b3",
          "balanceOf(address)": "70a08231",
          "decimals()": "313ce567",
          "mint(address,uint256)": "40c10f19",
          "name()": "06fdde03",
          "owner()": "8da5cb5b",
          "renounceOwnership()": "715018a6",
          "symbol()": "95d89b41",
          "totalSupply()": "18160ddd",
          "transfer(address,uint256)": "a9059cbb",
          "transferFrom(address,address,uint256)": "23b872dd",
          "transferOwnership(address)": "f2fde38b"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/example-use-cases/USDT.sol\":\"USDT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/example-use-cases/USDT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract USDT is ERC20, Ownable {\\n    constructor(address initialOwner) ERC20(\\\"USDT\\\", \\\"USDT\\\") Ownable(initialOwner) {}\\n\\n    function mint(address to, uint256 amount) public onlyOwner {\\n        _mint(to, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x089eff72e60ad9643f26bc6e856fb558f4cb65a750d8abc3857d76ccf986aeb5\",\"license\":\"MIT\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 307,
            "contract": "contracts/example-use-cases/USDT.sol:USDT",
            "label": "_balances",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 313,
            "contract": "contracts/example-use-cases/USDT.sol:USDT",
            "label": "_allowances",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 315,
            "contract": "contracts/example-use-cases/USDT.sol:USDT",
            "label": "_totalSupply",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 317,
            "contract": "contracts/example-use-cases/USDT.sol:USDT",
            "label": "_name",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 319,
            "contract": "contracts/example-use-cases/USDT.sol:USDT",
            "label": "_symbol",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 8,
            "contract": "contracts/example-use-cases/USDT.sol:USDT",
            "label": "_owner",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/ERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Context.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MerkleProof.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev These functions deal with verification of Merkle Tree proofs.\\n *\\n * The tree and the proofs can be generated using our\\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\\n * You will find a quickstart guide in the readme.\\n *\\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\\n * hashing, or use a hash function other than keccak256 for hashing leaves.\\n * This is because the concatenation of a sorted pair of internal nodes in\\n * the Merkle tree could be reinterpreted as a leaf value.\\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\\n * against this attack out of the box.\\n */\\nlibrary MerkleProof {\\n    /**\\n     *@dev The multiproof provided is not valid.\\n     */\\n    error MerkleProofInvalidMultiproof();\\n\\n    /**\\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\\n     * defined by `root`. For this, a `proof` must be provided, containing\\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\\n     */\\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\\n        return processProof(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {verify}\\n     */\\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\\n        return processProofCalldata(proof, leaf) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\\n     * hash matches the root of the tree. When processing the proof, the pairs\\n     * of leafs & pre-images are assumed to be sorted.\\n     */\\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processProof}\\n     */\\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\\n        bytes32 computedHash = leaf;\\n        for (uint256 i = 0; i < proof.length; i++) {\\n            computedHash = _hashPair(computedHash, proof[i]);\\n        }\\n        return computedHash;\\n    }\\n\\n    /**\\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\\n     *\\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\\n     */\\n    function multiProofVerify(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProof(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Calldata version of {multiProofVerify}\\n     *\\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\\n     */\\n    function multiProofVerifyCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32 root,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bool) {\\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\\n    }\\n\\n    /**\\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\\n     * respectively.\\n     *\\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\\n     */\\n    function processMultiProof(\\n        bytes32[] memory proof,\\n        bool[] memory proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the Merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 proofLen = proof.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        if (leavesLen + proofLen != totalHashes + 1) {\\n            revert MerkleProofInvalidMultiproof();\\n        }\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value from the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i]\\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\\n                : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            if (proofPos != proofLen) {\\n                revert MerkleProofInvalidMultiproof();\\n            }\\n            unchecked {\\n                return hashes[totalHashes - 1];\\n            }\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    /**\\n     * @dev Calldata version of {processMultiProof}.\\n     *\\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\\n     */\\n    function processMultiProofCalldata(\\n        bytes32[] calldata proof,\\n        bool[] calldata proofFlags,\\n        bytes32[] memory leaves\\n    ) internal pure returns (bytes32 merkleRoot) {\\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\\n        // the Merkle tree.\\n        uint256 leavesLen = leaves.length;\\n        uint256 proofLen = proof.length;\\n        uint256 totalHashes = proofFlags.length;\\n\\n        // Check proof validity.\\n        if (leavesLen + proofLen != totalHashes + 1) {\\n            revert MerkleProofInvalidMultiproof();\\n        }\\n\\n        // The xxxPos values are \\\"pointers\\\" to the next value to consume in each array. All accesses are done using\\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \\\"pop\\\".\\n        bytes32[] memory hashes = new bytes32[](totalHashes);\\n        uint256 leafPos = 0;\\n        uint256 hashPos = 0;\\n        uint256 proofPos = 0;\\n        // At each step, we compute the next hash using two values:\\n        // - a value from the \\\"main queue\\\". If not all leaves have been consumed, we get the next leaf, otherwise we\\n        //   get the next hash.\\n        // - depending on the flag, either another value from the \\\"main queue\\\" (merging branches) or an element from the\\n        //   `proof` array.\\n        for (uint256 i = 0; i < totalHashes; i++) {\\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\\n            bytes32 b = proofFlags[i]\\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\\n                : proof[proofPos++];\\n            hashes[i] = _hashPair(a, b);\\n        }\\n\\n        if (totalHashes > 0) {\\n            if (proofPos != proofLen) {\\n                revert MerkleProofInvalidMultiproof();\\n            }\\n            unchecked {\\n                return hashes[totalHashes - 1];\\n            }\\n        } else if (leavesLen > 0) {\\n            return leaves[0];\\n        } else {\\n            return proof[0];\\n        }\\n    }\\n\\n    /**\\n     * @dev Sorts the pair (a, b) and hashes the result.\\n     */\\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\\n    }\\n\\n    /**\\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\\n     */\\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            mstore(0x00, a)\\n            mstore(0x20, b)\\n            value := keccak256(0x00, 0x40)\\n        }\\n    }\\n}\\n\"\n    },\n    \"contracts/Consumable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.26;\\n\\nimport \\\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\\\";\\n\\nabstract contract Consumable {\\n    bytes32 public merkleRoot;\\n    uint256 public totalUsesPerConsumer;\\n    mapping(address => uint256) public userConsumptions;\\n\\n    constructor(bytes32 _merkleRoot, uint256 _totalUsesPerConsumer) {\\n        merkleRoot = _merkleRoot;\\n        totalUsesPerConsumer = _totalUsesPerConsumer;\\n    }\\n\\n    modifier onlyConsumer(bytes32[] calldata _merkleProof) {\\n        _checkConsumer(_merkleProof);\\n        _;\\n    }\\n\\n    function _checkConsumer(bytes32[] calldata _merkleProof) internal virtual {\\n        require(isValidConsumer(_merkleProof), \\\"Not a valid consumer\\\");\\n        require(consumerHasNotExceededTotalUses(), \\\"Consumer has exceeded total uses\\\");\\n        _incrementConsumerComsumptions();\\n    }\\n\\n    function isValidConsumer(bytes32[] calldata _merkleProof) public view returns (bool) {\\n        bytes32 leaf = keccak256(bytes.concat(keccak256(abi.encode(msg.sender))));\\n        return MerkleProof.verify(_merkleProof, merkleRoot, leaf);\\n    }\\n\\n    function consumerHasNotExceededTotalUses() public view returns (bool) {\\n        return userConsumptions[msg.sender] < totalUsesPerConsumer;\\n    }\\n\\n    function _incrementConsumerComsumptions() internal {\\n        userConsumptions[msg.sender]++;\\n    }\\n}\\n\"\n    },\n    \"contracts/example-use-cases/USDT.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract USDT is ERC20, Ownable {\\n    constructor(address initialOwner) ERC20(\\\"USDT\\\", \\\"USDT\\\") Ownable(initialOwner) {}\\n\\n    function mint(address to, uint256 amount) public onlyOwner {\\n        _mint(to, amount);\\n    }\\n}\\n\"\n    },\n    \"contracts/example-use-cases/Vault.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.26;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../Consumable.sol\\\";\\n\\n/* My Vault has 1000 Scroll Tokens, and each voucher is worth 100 tokens */\\ncontract Vault is Ownable, Consumable {\\n    address public tokenAddress;\\n    uint256 public voucherValue;\\n\\n    constructor(\\n        bytes32 _merkleRoot,\\n        uint256 _totalUsesPerConsumer,\\n        address _tokenAddress,\\n        uint256 _voucherValue\\n    ) Consumable(_merkleRoot, _totalUsesPerConsumer) Ownable(msg.sender) {\\n        tokenAddress = _tokenAddress;\\n        voucherValue = _voucherValue;\\n    }\\n\\n    function withdraw(address _token, uint256 _amount) external onlyOwner {\\n        IERC20(_token).transfer(msg.sender, _amount);\\n    }\\n\\n    function consumeVoucher(\\n        bytes32[] calldata _merkleProof,\\n        address receiver\\n    ) external onlyConsumer(_merkleProof) {\\n        IERC20(tokenAddress).transfer(receiver, voucherValue);\\n    }\\n}\\n\"\n    }\n  },\n  \"settings\": {\n    \"evmVersion\": \"paris\",\n    \"optimizer\": {\n      \"enabled\": false,\n      \"runs\": 200\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
      "solcInputHash": "0f04eff21b376af5279c25a89f9bf192",
      "transactionHash": "0x4519d1ca0155be043d53be4fbd79165f00e748db29685cedd958b8cd22e2af7a",
      "args": [
        "0xc6f7E8DB9dE361bBF1Aa4fEff6Aa54a510449Fe1"
      ]
    },
    "decoded": {
      "from": "0xc6f7E8DB9dE361bBF1Aa4fEff6Aa54a510449Fe1",
      "gasPrice": "112013002",
      "maxFeePerGas": "112013002",
      "maxPriorityFeePerGas": "48700001",
      "gasLimit": "1114873",
      "to": null,
      "value": "0",
      "nonce": 0,
      "data": "0x608060405234801561001057600080fd5b5060405161179438038061179483398181016040528101906100329190610272565b806040518060400160405280600481526020017f55534454000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f555344540000000000000000000000000000000000000000000000000000000081525081600390816100ae91906104ef565b5080600490816100be91906104ef565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101335760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012a91906105d0565b60405180910390fd5b6101428161014960201b60201c565b50506105eb565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061023f82610214565b9050919050565b61024f81610234565b811461025a57600080fd5b50565b60008151905061026c81610246565b92915050565b6000602082840312156102885761028761020f565b5b60006102968482850161025d565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061032057607f821691505b602082108103610333576103326102d9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261039b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261035e565b6103a5868361035e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006103ec6103e76103e2846103bd565b6103c7565b6103bd565b9050919050565b6000819050919050565b610406836103d1565b61041a610412826103f3565b84845461036b565b825550505050565b600090565b61042f610422565b61043a8184846103fd565b505050565b5b8181101561045e57610453600082610427565b600181019050610440565b5050565b601f8211156104a35761047481610339565b61047d8461034e565b8101602085101561048c578190505b6104a06104988561034e565b83018261043f565b50505b505050565b600082821c905092915050565b60006104c6600019846008026104a8565b1980831691505092915050565b60006104df83836104b5565b9150826002028217905092915050565b6104f88261029f565b67ffffffffffffffff811115610511576105106102aa565b5b61051b8254610308565b610526828285610462565b600060209050601f8311600181146105595760008415610547578287015190505b61055185826104d3565b8655506105b9565b601f19841661056786610339565b60005b8281101561058f5784890151825560018201915060208501945060208101905061056a565b868310156105ac57848901516105a8601f8916826104b5565b8355505b6001600288020188555050505b505050505050565b6105ca81610234565b82525050565b60006020820190506105e560008301846105c1565b92915050565b61119a806105fa6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610dee565b60405180910390f35b61010c60048036038101906101079190610ea9565b61032e565b6040516101199190610f04565b60405180910390f35b61012a610351565b6040516101379190610f2e565b60405180910390f35b61015a60048036038101906101559190610f49565b61035b565b6040516101679190610f04565b60405180910390f35b61017861038a565b6040516101859190610fb8565b60405180910390f35b6101a860048036038101906101a39190610ea9565b610393565b005b6101c460048036038101906101bf9190610fd3565b6103a9565b6040516101d19190610f2e565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f9919061100f565b60405180910390f35b61020a61042f565b6040516102179190610dee565b60405180910390f35b61023a60048036038101906102359190610ea9565b6104c1565b6040516102479190610f04565b60405180910390f35b61026a6004803603810190610265919061102a565b6104e4565b6040516102779190610f2e565b60405180910390f35b61029a60048036038101906102959190610fd3565b61056b565b005b6060600380546102ab90611099565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790611099565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e85858561069f565b60019150509392505050565b60006012905090565b61039b610793565b6103a5828261081a565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610793565b610403600061089c565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e90611099565b80601f016020809104026020016040519081016040528092919081815260200182805461046a90611099565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d981858561069f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610793565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc919061100f565b60405180910390fd5b6105ee8161089c565b50565b600033905090565b6106068383836001610962565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106995781811015610689578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610680939291906110ca565b60405180910390fd5b61069884848484036000610962565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107115760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610708919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107835760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077a919061100f565b60405180910390fd5b61078e838383610b39565b505050565b61079b6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107b9610405565b73ffffffffffffffffffffffffffffffffffffffff1614610818576107dc6105f1565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161080f919061100f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610883919061100f565b60405180910390fd5b61089860008383610b39565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d45760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cb919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a465760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3d919061100f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b33578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2a9190610f2e565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8b578060026000828254610b7f9190611130565b92505081905550610c5e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0e939291906110ca565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca75780600260008282540392505081905550610cf4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d519190610f2e565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d98578082015181840152602081019050610d7d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc082610d5e565b610dca8185610d69565b9350610dda818560208601610d7a565b610de381610da4565b840191505092915050565b60006020820190508181036000830152610e088184610db5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4082610e15565b9050919050565b610e5081610e35565b8114610e5b57600080fd5b50565b600081359050610e6d81610e47565b92915050565b6000819050919050565b610e8681610e73565b8114610e9157600080fd5b50565b600081359050610ea381610e7d565b92915050565b60008060408385031215610ec057610ebf610e10565b5b6000610ece85828601610e5e565b9250506020610edf85828601610e94565b9150509250929050565b60008115159050919050565b610efe81610ee9565b82525050565b6000602082019050610f196000830184610ef5565b92915050565b610f2881610e73565b82525050565b6000602082019050610f436000830184610f1f565b92915050565b600080600060608486031215610f6257610f61610e10565b5b6000610f7086828701610e5e565b9350506020610f8186828701610e5e565b9250506040610f9286828701610e94565b9150509250925092565b600060ff82169050919050565b610fb281610f9c565b82525050565b6000602082019050610fcd6000830184610fa9565b92915050565b600060208284031215610fe957610fe8610e10565b5b6000610ff784828501610e5e565b91505092915050565b61100981610e35565b82525050565b60006020820190506110246000830184611000565b92915050565b6000806040838503121561104157611040610e10565b5b600061104f85828601610e5e565b925050602061106085828601610e5e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b157607f821691505b6020821081036110c4576110c361106a565b5b50919050565b60006060820190506110df6000830186611000565b6110ec6020830185610f1f565b6110f96040830184610f1f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113b82610e73565b915061114683610e73565b925082820190508082111561115e5761115d611101565b5b9291505056fea2646970667358221220404018bc6ad07b93e6c7d5202a4df04bbdf224aa0770c9cdae9758c1d874bb5364736f6c634300081a0033000000000000000000000000c6f7e8db9de361bbf1aa4feff6aa54a510449fe1",
      "r": "0x7d8546cb1a685d44e60da2c3525b5699c7e261c5514af7c17f5462cee852d45d",
      "s": "0x35627f66060a9283c268911adb50fdabc19acb5f0122184d4129c51aa1d88409",
      "v": 0,
      "chainId": 534351
    }
  }
}